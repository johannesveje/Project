#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
       1                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
 1.0000000000000000E-004   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(170,94)
_dummy
_derdummy
ramp.height
ramp.duration
ramp.offset
ramp.startTime
ramp.y
ramp1.height
ramp1.duration
ramp1.offset
ramp1.startTime
ramp1.y
boundary.nPorts
boundary.medium.d
boundary.medium.T
boundary.medium.X[1]
boundary.medium.u
boundary.medium.R
boundary.medium.MM
boundary.medium.state.phase
boundary.medium.preferredMediumStates
boundary.medium.standardOrderComponents
boundary.medium.T_degC
boundary.medium.p_bar
boundary.medium.sat.Tsat
_GlobalScope.Modelica.Media.Water.waterConstants[1].molarMass
_GlobalScope.Modelica.Media.Water.waterConstants[1].criticalTemperature
_GlobalScope.Modelica.Media.Water.waterConstants[1].criticalPressure
_GlobalScope.Modelica.Media.Water.waterConstants[1].criticalMolarVolume
_GlobalScope.Modelica.Media.Water.waterConstants[1].acentricFactor
_GlobalScope.Modelica.Media.Water.waterConstants[1].triplePointTemperature
_GlobalScope.Modelica.Media.Water.waterConstants[1].triplePointPressure
_GlobalScope.Modelica.Media.Water.waterConstants[1].meltingPoint
_GlobalScope.Modelica.Media.Water.waterConstants[1].normalBoilingPoint
_GlobalScope.Modelica.Media.Water.waterConstants[1].dipoleMoment
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasIdealGasHeatCapacity
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasCriticalData
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasDipoleMoment
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasFundamentalEquation
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasLiquidHeatCapacity
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasSolidHeatCapacity
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasAccurateViscosityData
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasAccurateConductivityData
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasVapourPressureCurve
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasAcentricFactor
_GlobalScope.Modelica.Media.Water.waterConstants[1].HCRIT0
_GlobalScope.Modelica.Media.Water.waterConstants[1].SCRIT0
_GlobalScope.Modelica.Media.Water.waterConstants[1].deltah
_GlobalScope.Modelica.Media.Water.waterConstants[1].deltas
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].molarMass
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalTemperature
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalPressure
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalMolarVolume
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].acentricFactor
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].triplePointTemperature
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].triplePointPressure
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].meltingPoint
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].normalBoilingPoint
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].dipoleMoment
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasIdealGasHeatCapacity
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasCriticalData
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasDipoleMoment
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasFundamentalEquation
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasLiquidHeatCapacity
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasSolidHeatCapacity
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAccurateViscosityData
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAccurateConductivityData
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasVapourPressureCurve
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAcentricFactor
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].HCRIT0
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].SCRIT0
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].deltah
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].deltas
boundary.ports[1].m_flow
boundary.ports[1].p
boundary.ports[1].h_outflow
boundary.flowDirection
boundary.use_m_flow_in
boundary.use_h_in
boundary.use_X_in
boundary.use_C_in
boundary.m_flow
boundary.h
boundary.X[1]
boundary.X_in_internal[1]
valve.dp_nominal
valve.m_flow_nominal
valve.k
valve.dp
valve.port_a.h_outflow
valve.port_b.p
valve.port_b.h_outflow
valve.opening
boundary1.nPorts
boundary1.medium.p
boundary1.medium.d
boundary1.medium.T
boundary1.medium.X[1]
boundary1.medium.u
boundary1.medium.R
boundary1.medium.MM
boundary1.medium.state.phase
boundary1.medium.state.p
boundary1.medium.preferredMediumStates
boundary1.medium.standardOrderComponents
boundary1.medium.T_degC
boundary1.medium.p_bar
boundary1.medium.sat.psat
boundary1.medium.sat.Tsat
boundary1.ports[1].p
boundary1.ports[1].h_outflow
boundary1.flowDirection
boundary1.use_p_in
boundary1.use_T_in
boundary1.use_X_in
boundary1.use_C_in
boundary1.p
boundary1.T
boundary1.X[1]
boundary1.p_in_internal
boundary1.T_in_internal
boundary1.X_in_internal[1]
ramp2.height
ramp2.duration
ramp2.offset
ramp2.startTime
ramp2.y
fuelOutput.m_flow
fuelOutput.LHV
fuelOutput.rho
fuelOutput.prox[1]
fuelOutput.prox[2]
fuelOutput.prox[3]
fuelOutput.ulti[1]
fuelOutput.ulti[2]
fuelOutput.ulti[3]
fuelOutput.ulti[4]
fuelOutput.ulti[5]
fuelOutput.spicies[1]
fuelSource.m_flow
fuelSource.LHV
fuelSource.rho
fuelSource.prox_moi
fuelSource.prox_com
fuelSource.prox_ash
fuelSource.use_ultimate
fuelSource.ulti_C
fuelSource.ulti_H
fuelSource.ulti_O
fuelSource.ulti_N
fuelSource.ulti_S
fuelSource.use_spicies
fuelSource.spicies_CO2
fuelSource.prox[1]
fuelSource.prox[2]
fuelSource.prox[3]
fuelSource.ulti[1]
fuelSource.ulti[2]
fuelSource.ulti[3]
fuelSource.ulti[4]
fuelSource.ulti[5]
fuelSource.spicies[1]
fuelSource.fuelOutput1.LHV
fuelSource.fuelOutput1.prox[3]
fuelSource.fuelOutput1.ulti[1]
fuelSource.fuelOutput1.ulti[2]
fuelSource.fuelOutput1.ulti[3]
fuelSource.fuelOutput1.ulti[4]
fuelSource.fuelOutput1.ulti[5]
fuelSource.fuelOutput1.spicies[1]

double initialValue(170,6)
 -1       1                       0                       0                
  2     0   # _dummy
  0       0                       0                       0                
  3     0   # _derdummy
 -1       1                       0                       0                
  1   280   # ramp.height
 -1 8.0000000000000004E-001       0                 1.0000000000000000E+100
  1   280   # ramp.duration
 -1       0                       0                       0                
  1   280   # ramp.offset
 -1 1.0000000000000001E-001       0                       0                
  1   280   # ramp.startTime
  0       0                       0                       0                
  6   256   # ramp.y
 -1    5000                       0                       0                
  1   280   # ramp1.height
 -1 8.0000000000000004E-001       0                 1.0000000000000000E+100
  1   280   # ramp1.duration
 -1   80000                       0                       0                
  1   280   # ramp1.offset
 -1 1.0000000000000001E-001       0                       0                
  1   280   # ramp1.startTime
  0       0                       0                       0                
  6   256   # ramp1.y
  0       1                       0                       0                
  6   258   # boundary.nPorts
  0     150                       0                  100000                
  6   256   # boundary.medium.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # boundary.medium.T
  0       1                       0                       1                
  6   256   # boundary.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # boundary.medium.u
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6   256   # boundary.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # boundary.medium.MM
  0       1                       0                       2                
  6   258   # boundary.medium.state.phase
  0       0                       0                       0                
  6   257   # boundary.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # boundary.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # boundary.medium.T_degC
  0       0                       0                       0                
  6   256   # boundary.medium.p_bar
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # boundary.medium.sat.Tsat
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].molarMass
  0 6.4709600000000000E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].criticalTemperature
  0 2.2064000000000000E+007       0                 1.0000000000000000E+008
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].criticalPressure
  0 5.5948037267080745E-005 9.9999999999999995E-007 1.0000000000000000E+006
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].criticalMolarVolume
  0 3.4399999999999997E-001       0                       0                
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].acentricFactor
  0 2.7316000000000003E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].triplePointTemperature
  0 6.1165700000000004E+002       0                 1.0000000000000000E+008
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].triplePointPressure
  0 2.7314999999999998E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].meltingPoint
  0 3.7312400000000002E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].normalBoilingPoint
  0 1.8000000000000000E+000       0                       2                
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].dipoleMoment
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasIdealGasHeatCapacity
  0       1                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasCriticalData
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasDipoleMoment
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasFundamentalEquation
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasLiquidHeatCapacity
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasSolidHeatCapacity
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasAccurateViscosityData
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasAccurateConductivityData
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasVapourPressureCurve
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasAcentricFactor
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].HCRIT0
  0       0                 -1.0000000000000000E+007 1.0000000000000000E+007
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].SCRIT0
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].deltah
  0       0                 -1.0000000000000000E+007 1.0000000000000000E+007
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].deltas
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].molarMass
  0 6.4709600000000000E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalTemperature
  0 2.2064000000000000E+007       0                 1.0000000000000000E+008
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalPressure
  0 5.5948037267080745E-005 9.9999999999999995E-007 1.0000000000000000E+006
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalMolarVolume
  0 3.4399999999999997E-001       0                       0                
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].acentricFactor
  0 2.7316000000000003E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].triplePointTemperature
  0 6.1165700000000004E+002       0                 1.0000000000000000E+008
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].triplePointPressure
  0 2.7314999999999998E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].meltingPoint
  0 3.7312400000000002E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].normalBoilingPoint
  0 1.8000000000000000E+000       0                       2                
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].dipoleMoment
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasIdealGasHeatCapacity
  0       1                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasCriticalData
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasDipoleMoment
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasFundamentalEquation
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasLiquidHeatCapacity
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasSolidHeatCapacity
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAccurateViscosityData
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAccurateConductivityData
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasVapourPressureCurve
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAcentricFactor
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].HCRIT0
  0       0                 -1.0000000000000000E+007 1.0000000000000000E+007
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].SCRIT0
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].deltah
  0       0                 -1.0000000000000000E+007 1.0000000000000000E+007
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].deltas
  0       0                      -1                       0                
  6   388   # boundary.ports[1].m_flow
  0 5.0000000000000000E+006 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # boundary.ports[1].p
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # boundary.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # boundary.flowDirection
  0       1                       0                       0                
  6   769   # boundary.use_m_flow_in
  0       0                       0                       0                
  6   769   # boundary.use_h_in
  0       0                       0                       0                
  6   769   # boundary.use_X_in
  0       0                       0                       0                
  6   769   # boundary.use_C_in
  0       0                 -100000                  100000                
  6   256   # boundary.m_flow
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # boundary.h
  0       1                       0                       1                
  6   256   # boundary.X[1]
  0       1                       0                       0                
  6  1280   # boundary.X_in_internal[1]
 -1 2.0000000000000000E+005       0                       0                
  1   280   # valve.dp_nominal
 -1       2                       0                       0                
  1   280   # valve.m_flow_nominal
  0       0                       0                       0                
  6   256   # valve.k
  0       0                       0                       0                
  6   256   # valve.dp
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # valve.port_a.h_outflow
  0  100000                 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # valve.port_b.p
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # valve.port_b.h_outflow
  0       0                       0                       1                
  6   256   # valve.opening
  0       1                       0                       0                
  6   258   # boundary1.nPorts
  0  100000                       0                 1.0000000000000000E+100
  6   256   # boundary1.medium.p
  0     150                       0                  100000                
  6   256   # boundary1.medium.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # boundary1.medium.T
  0       1                       0                       1                
  6   256   # boundary1.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # boundary1.medium.u
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6   256   # boundary1.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # boundary1.medium.MM
  0       1                       0                       2                
  6   258   # boundary1.medium.state.phase
  0  100000                 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # boundary1.medium.state.p
  0       0                       0                       0                
  6   257   # boundary1.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # boundary1.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # boundary1.medium.T_degC
  0       1                       0                       0                
  6   256   # boundary1.medium.p_bar
  0  100000                 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # boundary1.medium.sat.psat
  0 3.7275591861133785E+002 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # boundary1.medium.sat.Tsat
  0  100000                 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # boundary1.ports[1].p
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # boundary1.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # boundary1.flowDirection
  0       0                       0                       0                
  6   769   # boundary1.use_p_in
  0       0                       0                       0                
  6   769   # boundary1.use_T_in
  0       0                       0                       0                
  6   769   # boundary1.use_X_in
  0       0                       0                       0                
  6   769   # boundary1.use_C_in
  0  100000                 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # boundary1.p
  0 2.9314999999999998E+002 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # boundary1.T
  0       1                       0                       1                
  6   256   # boundary1.X[1]
  0  100000                       0                       0                
  6  1280   # boundary1.p_in_internal
  0 2.9314999999999998E+002       0                       0                
  6  1280   # boundary1.T_in_internal
  0       1                       0                       0                
  6  1280   # boundary1.X_in_internal[1]
 -1    5000                       0                       0                
  1   280   # ramp2.height
 -1 8.0000000000000004E-001       0                 1.0000000000000000E+100
  1   280   # ramp2.duration
 -1   80000                       0                       0                
  1   280   # ramp2.offset
 -1 1.0000000000000001E-001       0                       0                
  1   280   # ramp2.startTime
  0       0                       0                       0                
  6   256   # ramp2.y
  0       0                       0                       0                
  4   260   # fuelOutput.m_flow
  0      15                       0                       0                
  4   260   # fuelOutput.LHV
  0       0                       0                 1.0000000000000000E+100
  4   260   # fuelOutput.rho
  0       0                       0                       1                
  4   260   # fuelOutput.prox[1]
  0       0                       0                       1                
  4   260   # fuelOutput.prox[2]
  0       0                       0                       1                
  4   260   # fuelOutput.prox[3]
  0       0                       0                       1                
  4   260   # fuelOutput.ulti[1]
  0       0                       0                       1                
  4   260   # fuelOutput.ulti[2]
  0       0                       0                       1                
  4   260   # fuelOutput.ulti[3]
  0       0                       0                       1                
  4   260   # fuelOutput.ulti[4]
  0       0                       0                       1                
  4   260   # fuelOutput.ulti[5]
  0       1                       0                       1                
  4   260   # fuelOutput.spicies[1]
 -1       1                       0                       0                
  1   280   # fuelSource.m_flow
  0      15                       0                       0                
  6   256   # fuelSource.LHV
 -1       1                       0                 1.0000000000000000E+100
  1   280   # fuelSource.rho
 -1       1                       0                       1                
  1   280   # fuelSource.prox_moi
 -1       1                       0                       1                
  1   280   # fuelSource.prox_com
 -1       1                       0                       1                
  1   280   # fuelSource.prox_ash
  0       1                       0                       0                
  6   769   # fuelSource.use_ultimate
 -1       1                       0                       1                
  1   280   # fuelSource.ulti_C
 -1       1                       0                       1                
  1   280   # fuelSource.ulti_H
 -1       1                       0                       1                
  1   280   # fuelSource.ulti_O
 -1       1                       0                       1                
  1   280   # fuelSource.ulti_N
 -1       1                       0                       1                
  1   280   # fuelSource.ulti_S
  0       0                       0                       0                
  6   769   # fuelSource.use_spicies
 -1       1                       0                       1                
  1   280   # fuelSource.spicies_CO2
  0       0                       0                       1                
  6  1280   # fuelSource.prox[1]
  0       0                       0                       1                
  6  1280   # fuelSource.prox[2]
  0       0                       0                       1                
  6  1280   # fuelSource.prox[3]
  0       0                       0                       1                
  6  1280   # fuelSource.ulti[1]
  0       0                       0                       1                
  6  1280   # fuelSource.ulti[2]
  0       0                       0                       1                
  6  1280   # fuelSource.ulti[3]
  0       0                       0                       1                
  6  1280   # fuelSource.ulti[4]
  0       0                       0                       1                
  6  1280   # fuelSource.ulti[5]
  0       0                       0                       1                
  6  1280   # fuelSource.spicies[1]
  0      15                       0                       0                
  6   260   # fuelSource.fuelOutput1.LHV
  0       0                       0                       1                
  6   260   # fuelSource.fuelOutput1.prox[3]
  0       0                       0                       1                
  6   260   # fuelSource.fuelOutput1.ulti[1]
  0       0                       0                       1                
  6   260   # fuelSource.fuelOutput1.ulti[2]
  0       0                       0                       1                
  6   260   # fuelSource.fuelOutput1.ulti[3]
  0       0                       0                       1                
  6   260   # fuelSource.fuelOutput1.ulti[4]
  0       0                       0                       1                
  6   260   # fuelSource.fuelOutput1.ulti[5]
  0       1                       0                       1                
  6   260   # fuelSource.fuelOutput1.spicies[1]


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(170,114)
dummy
derdummy
Height of ramps
Duration of ramp (= 0.0 gives a Step) [s]
Offset of output signal
Output = offset for time < startTime [s]
Connector of Real output signal
Height of ramps
Duration of ramp (= 0.0 gives a Step) [s]
Offset of output signal
Output = offset for time < startTime [s]
Connector of Real output signal
Number of ports [:#(type=Integer)]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation temperature [K|degC]
Molar mass [kg/mol]
Critical temperature [K|degC]
Critical pressure [Pa|bar]
Critical molar Volume [m3/mol]
Pitzer acentric factor
Triple point temperature [K|degC]
Triple point pressure [Pa|bar]
Melting point at 101325 Pa [K|degC]
Normal boiling point (at 101325 Pa) [K|degC]
Dipole moment of molecule in Debye (1 debye = 3.33564e10-30 C.m) [debye]
True if ideal gas heat capacity is available [:#(type=Boolean)]
True if critical data are known [:#(type=Boolean)]
True if a dipole moment known [:#(type=Boolean)]
True if a fundamental equation [:#(type=Boolean)]
True if liquid heat capacity is available [:#(type=Boolean)]
True if solid heat capacity is available [:#(type=Boolean)]
True if accurate data for a viscosity function is available [:#(type=Boolean)]
True if accurate data for thermal conductivity is available [:#(type=Boolean)]
True if vapour pressure data, e.g., Antoine coefficents are known [:#(type=Boolean)]
True if Pitzer accentric factor is known [:#(type=Boolean)]
Critical specific enthalpy of the fundamental equation [J/kg]
Critical specific entropy of the fundamental equation [J/(kg.K)]
Difference between specific enthalpy model (h_m) and f.eq. (h_f) (h_m - h_f) [J/kg]
Difference between specific enthalpy model (s_m) and f.eq. (s_f) (s_m - s_f) [J/(kg.K)]
Molar mass [kg/mol]
Critical temperature [K|degC]
Critical pressure [Pa|bar]
Critical molar Volume [m3/mol]
Pitzer acentric factor
Triple point temperature [K|degC]
Triple point pressure [Pa|bar]
Melting point at 101325 Pa [K|degC]
Normal boiling point (at 101325 Pa) [K|degC]
Dipole moment of molecule in Debye (1 debye = 3.33564e10-30 C.m) [debye]
True if ideal gas heat capacity is available [:#(type=Boolean)]
True if critical data are known [:#(type=Boolean)]
True if a dipole moment known [:#(type=Boolean)]
True if a fundamental equation [:#(type=Boolean)]
True if liquid heat capacity is available [:#(type=Boolean)]
True if solid heat capacity is available [:#(type=Boolean)]
True if accurate data for a viscosity function is available [:#(type=Boolean)]
True if accurate data for thermal conductivity is available [:#(type=Boolean)]
True if vapour pressure data, e.g., Antoine coefficents are known [:#(type=Boolean)]
True if Pitzer accentric factor is known [:#(type=Boolean)]
Critical specific enthalpy of the fundamental equation [J/kg]
Critical specific entropy of the fundamental equation [J/(kg.K)]
Difference between specific enthalpy model (h_m) and f.eq. (h_f) (h_m - h_f) [J/kg]
Difference between specific enthalpy model (s_m) and f.eq. (s_f) (s_m - s_f) [J/(kg.K)]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the mass flow rate from the input connector [:#(type=Boolean)]
Get the specific enthalpy from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed mass flow rate going out of the fluid port [kg/s]
Fixed value of specific enthalpy [J/kg]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector [1]
Nominal pressure difference at full opening [Pa|bar]
Nominal flow rate at full opening [kg/s]
[m.s]
[Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
1 is full open, 0 is fully closed  [1]
Number of ports [:#(type=Integer)]
Absolute pressure of medium [Pa|bar]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Pressure [Pa|bar]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation pressure [Pa|bar]
Saturation temperature [K|degC]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the pressure from the input connector [:#(type=Boolean)]
Get the temperature from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Fixed value of temperature [K|degC]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector [Pa]
Needed to connect to conditional connector [K]
Needed to connect to conditional connector [1]
Height of ramps
Duration of ramp (= 0.0 gives a Step) [s]
Offset of output signal
Output = offset for time < startTime [s]
Connector of Real output signal
[kg/s]
[J/kg]
[kg/m3|g/cm3]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
Mass flow of the fuel [kg/s]
Lower Heating Value of the fuel [J/kg|MJ/kg]
Density of the fuel [kg/m3|g/cm3]
Mass fraction of Moisture [1]
Mass fraction of Combustibles [1]
Mass fraction of Ash [1]
Use ultimate analasis data [:#(type=Boolean)]
Mass fraction of Carbon (C) [1]
Mass fraction of Hydrogen (H) [1]
Mass fraction of Oxygen (O) [1]
Mass fraction of Nitrogen (N) [1]
Mass fraction of Sulfur (S) [1]
Use spicies analasis data [:#(type=Boolean)]
Mass fraction of CO2 [1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[1]
[J/kg]
[1]
[1]
[1]
[1]
[1]
[1]
[1]

