#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
     120                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
 9.9999999999999995E-007   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
      15                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(807,94)
system.p_ambient
system.T_ambient
system.g
system.allowFlowReversal
system.energyDynamics
system.massDynamics
system.substanceDynamics
system.traceDynamics
system.momentumDynamics
system.m_flow_start
system.p_start
system.T_start
system.use_eps_Re
system.m_flow_nominal
system.eps_m_flow
system.dp_small
system.m_flow_small
CoolantInlet.nPorts
CoolantInlet.medium.p
CoolantInlet.medium.d
CoolantInlet.medium.T
CoolantInlet.medium.X[1]
CoolantInlet.medium.u
CoolantInlet.medium.R
CoolantInlet.medium.MM
CoolantInlet.medium.state.phase
CoolantInlet.medium.state.p
CoolantInlet.medium.preferredMediumStates
CoolantInlet.medium.standardOrderComponents
CoolantInlet.medium.T_degC
CoolantInlet.medium.p_bar
CoolantInlet.medium.sat.psat
CoolantInlet.medium.sat.Tsat
_GlobalScope.Modelica.Media.Water.waterConstants[1].molarMass
_GlobalScope.Modelica.Media.Water.waterConstants[1].criticalTemperature
_GlobalScope.Modelica.Media.Water.waterConstants[1].criticalPressure
_GlobalScope.Modelica.Media.Water.waterConstants[1].criticalMolarVolume
_GlobalScope.Modelica.Media.Water.waterConstants[1].acentricFactor
_GlobalScope.Modelica.Media.Water.waterConstants[1].triplePointTemperature
_GlobalScope.Modelica.Media.Water.waterConstants[1].triplePointPressure
_GlobalScope.Modelica.Media.Water.waterConstants[1].meltingPoint
_GlobalScope.Modelica.Media.Water.waterConstants[1].normalBoilingPoint
_GlobalScope.Modelica.Media.Water.waterConstants[1].dipoleMoment
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasIdealGasHeatCapacity
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasCriticalData
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasDipoleMoment
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasFundamentalEquation
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasLiquidHeatCapacity
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasSolidHeatCapacity
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasAccurateViscosityData
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasAccurateConductivityData
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasVapourPressureCurve
_GlobalScope.Modelica.Media.Water.waterConstants[1].hasAcentricFactor
_GlobalScope.Modelica.Media.Water.waterConstants[1].HCRIT0
_GlobalScope.Modelica.Media.Water.waterConstants[1].SCRIT0
_GlobalScope.Modelica.Media.Water.waterConstants[1].deltah
_GlobalScope.Modelica.Media.Water.waterConstants[1].deltas
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].molarMass
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalTemperature
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalPressure
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalMolarVolume
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].acentricFactor
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].triplePointTemperature
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].triplePointPressure
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].meltingPoint
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].normalBoilingPoint
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].dipoleMoment
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasIdealGasHeatCapacity
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasCriticalData
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasDipoleMoment
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasFundamentalEquation
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasLiquidHeatCapacity
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasSolidHeatCapacity
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAccurateViscosityData
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAccurateConductivityData
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasVapourPressureCurve
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAcentricFactor
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].HCRIT0
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].SCRIT0
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].deltah
_GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].deltas
CoolantInlet.ports[1].m_flow
CoolantInlet.ports[1].p
CoolantInlet.ports[1].h_outflow
CoolantInlet.flowDirection
CoolantInlet.use_m_flow_in
CoolantInlet.use_T_in
CoolantInlet.use_X_in
CoolantInlet.use_C_in
CoolantInlet.m_flow
CoolantInlet.T
CoolantInlet.X[1]
CoolantInlet.m_flow_in_internal
CoolantInlet.T_in_internal
CoolantInlet.X_in_internal[1]
CoolantOutlet.nPorts
CoolantOutlet.medium.p
CoolantOutlet.medium.d
CoolantOutlet.medium.T
CoolantOutlet.medium.X[1]
CoolantOutlet.medium.u
CoolantOutlet.medium.R
CoolantOutlet.medium.MM
CoolantOutlet.medium.state.phase
CoolantOutlet.medium.state.p
CoolantOutlet.medium.preferredMediumStates
CoolantOutlet.medium.standardOrderComponents
CoolantOutlet.medium.T_degC
CoolantOutlet.medium.p_bar
CoolantOutlet.medium.sat.psat
CoolantOutlet.medium.sat.Tsat
CoolantOutlet.ports[1].m_flow
CoolantOutlet.ports[1].p
CoolantOutlet.ports[1].h_outflow
CoolantOutlet.flowDirection
CoolantOutlet.use_p_in
CoolantOutlet.use_T_in
CoolantOutlet.use_X_in
CoolantOutlet.use_C_in
CoolantOutlet.p
CoolantOutlet.T
CoolantOutlet.X[1]
CoolantOutlet.p_in_internal
CoolantOutlet.T_in_internal
CoolantOutlet.X_in_internal[1]
temperature.height
temperature.duration
temperature.offset
temperature.startTime
temperature.y
toKelvin.Kelvin
T_fwd.allowFlowReversal
T_fwd.port_a.m_flow
T_fwd.port_a.p
T_fwd.port_b.m_flow
T_fwd.port_b.p
T_fwd.port_a_exposesState
T_fwd.port_b_exposesState
T_fwd.showDesignFlowDirection
T_fwd.m_flow_nominal
T_fwd.m_flow_small
T_fwd.T
bypassDegree.height
bypassDegree.duration
bypassDegree.offset
bypassDegree.startTime
bypassDegree.y
simpleBackPressurePlant.Q
simpleBackPressurePlant.P
simpleBackPressurePlant.DH1.mediumCold.p
simpleBackPressurePlant.DH1.mediumCold.h
simpleBackPressurePlant.DH1.mediumCold.der(h)
simpleBackPressurePlant.DH1.mediumCold.T
simpleBackPressurePlant.DH1.mediumCold.X[1]
simpleBackPressurePlant.DH1.mediumCold.u
simpleBackPressurePlant.DH1.mediumCold.der(u)
simpleBackPressurePlant.DH1.mediumCold.R
simpleBackPressurePlant.DH1.mediumCold.MM
simpleBackPressurePlant.DH1.mediumCold.state.phase
simpleBackPressurePlant.DH1.mediumCold.state.p
simpleBackPressurePlant.DH1.mediumCold.preferredMediumStates
simpleBackPressurePlant.DH1.mediumCold.standardOrderComponents
simpleBackPressurePlant.DH1.mediumCold.T_degC
simpleBackPressurePlant.DH1.mediumCold.p_bar
simpleBackPressurePlant.DH1.mediumCold.sat.psat
simpleBackPressurePlant.DH1.mediumCold.sat.Tsat
simpleBackPressurePlant.DH1.T_sat_nominal
simpleBackPressurePlant.DH1.p_sat_nominal
simpleBackPressurePlant.DH1.p_c_nominal
simpleBackPressurePlant.DH1.m_flow_c_nominal
simpleBackPressurePlant.DH1.K
simpleBackPressurePlant.DH1.allowFlowReversal
simpleBackPressurePlant.DH1.energyDynamics_cold
simpleBackPressurePlant.DH1.V_cold
simpleBackPressurePlant.DH1.p_cold_start
simpleBackPressurePlant.DH1.use_T_cold_start
simpleBackPressurePlant.DH1.T_cold_start
simpleBackPressurePlant.DH1.h_cold_start
simpleBackPressurePlant.DH1.m_flow_c_start
simpleBackPressurePlant.DH1.Q
simpleBackPressurePlant.DH1.h_sat
simpleBackPressurePlant.DH1.p_sat
simpleBackPressurePlant.DH1.m_cold
simpleBackPressurePlant.DH1.der(m_cold)
simpleBackPressurePlant.DH1.dp_hot_nominal
simpleBackPressurePlant.DH1.Uc
simpleBackPressurePlant.DH1.der(Uc)
simpleBackPressurePlant.DH1.dp_hot
simpleBackPressurePlant.DH1.port_a.m_flow
simpleBackPressurePlant.DH1.port_a.p
simpleBackPressurePlant.DH1.port_b.m_flow
simpleBackPressurePlant.DH1.port_b.p
simpleBackPressurePlant.DH1.port_c.m_flow
simpleBackPressurePlant.DH2.mediumCold.p
simpleBackPressurePlant.DH2.mediumCold.h
simpleBackPressurePlant.DH2.mediumCold.der(h)
simpleBackPressurePlant.DH2.mediumCold.T
simpleBackPressurePlant.DH2.mediumCold.X[1]
simpleBackPressurePlant.DH2.mediumCold.u
simpleBackPressurePlant.DH2.mediumCold.der(u)
simpleBackPressurePlant.DH2.mediumCold.R
simpleBackPressurePlant.DH2.mediumCold.MM
simpleBackPressurePlant.DH2.mediumCold.state.phase
simpleBackPressurePlant.DH2.mediumCold.state.p
simpleBackPressurePlant.DH2.mediumCold.preferredMediumStates
simpleBackPressurePlant.DH2.mediumCold.standardOrderComponents
simpleBackPressurePlant.DH2.mediumCold.T_degC
simpleBackPressurePlant.DH2.mediumCold.p_bar
simpleBackPressurePlant.DH2.mediumCold.sat.psat
simpleBackPressurePlant.DH2.mediumCold.sat.Tsat
simpleBackPressurePlant.DH2.T_sat_nominal
simpleBackPressurePlant.DH2.p_sat_nominal
simpleBackPressurePlant.DH2.p_c_nominal
simpleBackPressurePlant.DH2.m_flow_c_nominal
simpleBackPressurePlant.DH2.K
simpleBackPressurePlant.DH2.allowFlowReversal
simpleBackPressurePlant.DH2.energyDynamics_cold
simpleBackPressurePlant.DH2.V_cold
simpleBackPressurePlant.DH2.p_cold_start
simpleBackPressurePlant.DH2.use_T_cold_start
simpleBackPressurePlant.DH2.T_cold_start
simpleBackPressurePlant.DH2.h_cold_start
simpleBackPressurePlant.DH2.m_flow_c_start
simpleBackPressurePlant.DH2.Q
simpleBackPressurePlant.DH2.h_sat
simpleBackPressurePlant.DH2.p_sat
simpleBackPressurePlant.DH2.m_cold
simpleBackPressurePlant.DH2.der(m_cold)
simpleBackPressurePlant.DH2.dp_hot_nominal
simpleBackPressurePlant.DH2.Uc
simpleBackPressurePlant.DH2.der(Uc)
simpleBackPressurePlant.DH2.dp_hot
simpleBackPressurePlant.DH2.port_a.m_flow
simpleBackPressurePlant.DH2.port_a.p
simpleBackPressurePlant.DH2.port_b.m_flow
simpleBackPressurePlant.DH2.port_b.p
simpleBackPressurePlant.DH2.port_c.m_flow
simpleBackPressurePlant.T_DH1.allowFlowReversal
simpleBackPressurePlant.T_DH1.port_a.m_flow
simpleBackPressurePlant.T_DH1.port_a.p
simpleBackPressurePlant.T_DH1.port_b.m_flow
simpleBackPressurePlant.T_DH1.port_b.p
simpleBackPressurePlant.T_DH1.port_a_exposesState
simpleBackPressurePlant.T_DH1.port_b_exposesState
simpleBackPressurePlant.T_DH1.showDesignFlowDirection
simpleBackPressurePlant.T_DH1.m_flow_nominal
simpleBackPressurePlant.T_DH1.m_flow_small
simpleBackPressurePlant.T_DH1.T
simpleBackPressurePlant.LPH2.nPorts
simpleBackPressurePlant.LPH2.medium.h
simpleBackPressurePlant.LPH2.medium.d
simpleBackPressurePlant.LPH2.medium.T
simpleBackPressurePlant.LPH2.medium.X[1]
simpleBackPressurePlant.LPH2.medium.u
simpleBackPressurePlant.LPH2.medium.R
simpleBackPressurePlant.LPH2.medium.MM
simpleBackPressurePlant.LPH2.medium.state.phase
simpleBackPressurePlant.LPH2.medium.state.h
simpleBackPressurePlant.LPH2.medium.preferredMediumStates
simpleBackPressurePlant.LPH2.medium.standardOrderComponents
simpleBackPressurePlant.LPH2.medium.T_degC
simpleBackPressurePlant.LPH2.medium.p_bar
simpleBackPressurePlant.LPH2.medium.sat.Tsat
simpleBackPressurePlant.LPH2.ports[1].m_flow
simpleBackPressurePlant.LPH2.ports[1].p
simpleBackPressurePlant.LPH2.ports[1].h_outflow
simpleBackPressurePlant.LPH2.flowDirection
simpleBackPressurePlant.LPH2.use_m_flow_in
simpleBackPressurePlant.LPH2.use_h_in
simpleBackPressurePlant.LPH2.use_X_in
simpleBackPressurePlant.LPH2.use_C_in
simpleBackPressurePlant.LPH2.m_flow
simpleBackPressurePlant.LPH2.h
simpleBackPressurePlant.LPH2.X[1]
simpleBackPressurePlant.LPH2.m_flow_in_internal
simpleBackPressurePlant.LPH2.h_in_internal
simpleBackPressurePlant.LPH2.X_in_internal[1]
simpleBackPressurePlant.bleedHP12.port_1.m_flow
simpleBackPressurePlant.bleedHP12.port_2.m_flow
simpleBackPressurePlant.bleedHP12.port_3.m_flow
simpleBackPressurePlant.bleedHP12.portFlowDirection_1
simpleBackPressurePlant.bleedHP12.portFlowDirection_2
simpleBackPressurePlant.bleedHP12.portFlowDirection_3
simpleBackPressurePlant.bleedHP12.fluidVolume
simpleBackPressurePlant.bleedHP12.energyDynamics
simpleBackPressurePlant.bleedHP12.massDynamics
simpleBackPressurePlant.bleedHP12.substanceDynamics
simpleBackPressurePlant.bleedHP12.traceDynamics
simpleBackPressurePlant.bleedHP12.p_start
simpleBackPressurePlant.bleedHP12.use_T_start
simpleBackPressurePlant.bleedHP12.T_start
simpleBackPressurePlant.bleedHP12.h_start
simpleBackPressurePlant.bleedHP12.X_start[1]
simpleBackPressurePlant.bleedHP12.medium.p
simpleBackPressurePlant.bleedHP12.medium.der(p)
simpleBackPressurePlant.bleedHP12.medium.h
simpleBackPressurePlant.bleedHP12.medium.der(h)
simpleBackPressurePlant.bleedHP12.medium.d
simpleBackPressurePlant.bleedHP12.medium.der(d)
simpleBackPressurePlant.bleedHP12.medium.T
simpleBackPressurePlant.bleedHP12.medium.X[1]
simpleBackPressurePlant.bleedHP12.medium.u
simpleBackPressurePlant.bleedHP12.medium.der(u)
simpleBackPressurePlant.bleedHP12.medium.R
simpleBackPressurePlant.bleedHP12.medium.MM
simpleBackPressurePlant.bleedHP12.medium.state.phase
simpleBackPressurePlant.bleedHP12.medium.preferredMediumStates
simpleBackPressurePlant.bleedHP12.medium.standardOrderComponents
simpleBackPressurePlant.bleedHP12.medium.T_degC
simpleBackPressurePlant.bleedHP12.medium.p_bar
simpleBackPressurePlant.bleedHP12.medium.sat.Tsat
simpleBackPressurePlant.bleedHP12.U
simpleBackPressurePlant.bleedHP12.der(U)
simpleBackPressurePlant.bleedHP12.m
simpleBackPressurePlant.bleedHP12.der(m)
simpleBackPressurePlant.bleedHP12.Qb_flow
simpleBackPressurePlant.bleedHP12.Wb_flow
simpleBackPressurePlant.bleedHP12.initialize_p
simpleBackPressurePlant.bleedHP12.V
simpleBackPressurePlant.mixer_DH1.port_1.m_flow
simpleBackPressurePlant.mixer_DH1.port_3.m_flow
simpleBackPressurePlant.mixer_DH1.portFlowDirection_1
simpleBackPressurePlant.mixer_DH1.portFlowDirection_2
simpleBackPressurePlant.mixer_DH1.portFlowDirection_3
simpleBackPressurePlant.mixer_DH1.fluidVolume
simpleBackPressurePlant.mixer_DH1.energyDynamics
simpleBackPressurePlant.mixer_DH1.massDynamics
simpleBackPressurePlant.mixer_DH1.substanceDynamics
simpleBackPressurePlant.mixer_DH1.traceDynamics
simpleBackPressurePlant.mixer_DH1.p_start
simpleBackPressurePlant.mixer_DH1.use_T_start
simpleBackPressurePlant.mixer_DH1.T_start
simpleBackPressurePlant.mixer_DH1.h_start
simpleBackPressurePlant.mixer_DH1.X_start[1]
simpleBackPressurePlant.mixer_DH1.medium.p
simpleBackPressurePlant.mixer_DH1.medium.der(p)
simpleBackPressurePlant.mixer_DH1.medium.h
simpleBackPressurePlant.mixer_DH1.medium.der(h)
simpleBackPressurePlant.mixer_DH1.medium.d
simpleBackPressurePlant.mixer_DH1.medium.der(d)
simpleBackPressurePlant.mixer_DH1.medium.T
simpleBackPressurePlant.mixer_DH1.medium.X[1]
simpleBackPressurePlant.mixer_DH1.medium.u
simpleBackPressurePlant.mixer_DH1.medium.der(u)
simpleBackPressurePlant.mixer_DH1.medium.R
simpleBackPressurePlant.mixer_DH1.medium.MM
simpleBackPressurePlant.mixer_DH1.medium.state.phase
simpleBackPressurePlant.mixer_DH1.medium.preferredMediumStates
simpleBackPressurePlant.mixer_DH1.medium.standardOrderComponents
simpleBackPressurePlant.mixer_DH1.medium.T_degC
simpleBackPressurePlant.mixer_DH1.medium.p_bar
simpleBackPressurePlant.mixer_DH1.medium.sat.Tsat
simpleBackPressurePlant.mixer_DH1.U
simpleBackPressurePlant.mixer_DH1.der(U)
simpleBackPressurePlant.mixer_DH1.m
simpleBackPressurePlant.mixer_DH1.der(m)
simpleBackPressurePlant.mixer_DH1.Qb_flow
simpleBackPressurePlant.mixer_DH1.Wb_flow
simpleBackPressurePlant.mixer_DH1.initialize_p
simpleBackPressurePlant.mixer_DH1.V
simpleBackPressurePlant.ve_DH2.allowFlowReversal
simpleBackPressurePlant.ve_DH2.port_a.m_flow
simpleBackPressurePlant.ve_DH2.port_b.m_flow
simpleBackPressurePlant.ve_DH2.port_a_exposesState
simpleBackPressurePlant.ve_DH2.port_b_exposesState
simpleBackPressurePlant.ve_DH2.showDesignFlowDirection
simpleBackPressurePlant.ve_DH2.medium.p
simpleBackPressurePlant.ve_DH2.medium.der(p)
simpleBackPressurePlant.ve_DH2.medium.h
simpleBackPressurePlant.ve_DH2.medium.der(h)
simpleBackPressurePlant.ve_DH2.medium.X[1]
simpleBackPressurePlant.ve_DH2.medium.u
simpleBackPressurePlant.ve_DH2.medium.der(u)
simpleBackPressurePlant.ve_DH2.medium.R
simpleBackPressurePlant.ve_DH2.medium.MM
simpleBackPressurePlant.ve_DH2.medium.state.phase
simpleBackPressurePlant.ve_DH2.medium.preferredMediumStates
simpleBackPressurePlant.ve_DH2.medium.standardOrderComponents
simpleBackPressurePlant.ve_DH2.medium.T_degC
simpleBackPressurePlant.ve_DH2.medium.p_bar
simpleBackPressurePlant.ve_DH2.medium.sat.Tsat
simpleBackPressurePlant.ve_DH2.V
simpleBackPressurePlant.ve_DH2.use_HeatTransfer
simpleBackPressurePlant.ve_DH2.use_UA_exponent
simpleBackPressurePlant.ve_DH2.UA_nominal
simpleBackPressurePlant.ve_DH2.m_flow_nominal
simpleBackPressurePlant.ve_DH2.UA_exponent
simpleBackPressurePlant.ve_DH2.energyDynamics
simpleBackPressurePlant.ve_DH2.massDynamics
simpleBackPressurePlant.ve_DH2.p_start
simpleBackPressurePlant.ve_DH2.use_T_start
simpleBackPressurePlant.ve_DH2.T_start
simpleBackPressurePlant.ve_DH2.h_start
simpleBackPressurePlant.ve_DH2.X_start[1]
simpleBackPressurePlant.ve_DH2.use_homotopy
simpleBackPressurePlant.ve_DH2.U
simpleBackPressurePlant.ve_DH2.der(U)
simpleBackPressurePlant.ve_DH2.T
simpleBackPressurePlant.ve_DH2.m
simpleBackPressurePlant.ve_DH2.der(m)
simpleBackPressurePlant.ve_DH2.UA
simpleBackPressurePlant.ve_DH2.heatPort.Q_flow
simpleBackPressurePlant.ve_DH2.initialize_p
simpleBackPressurePlant.ve_DH2.h_a
simpleBackPressurePlant.FWT.nPorts
simpleBackPressurePlant.FWT.medium.p
simpleBackPressurePlant.FWT.medium.h
simpleBackPressurePlant.FWT.medium.d
simpleBackPressurePlant.FWT.medium.T
simpleBackPressurePlant.FWT.medium.X[1]
simpleBackPressurePlant.FWT.medium.u
simpleBackPressurePlant.FWT.medium.R
simpleBackPressurePlant.FWT.medium.MM
simpleBackPressurePlant.FWT.medium.state.phase
simpleBackPressurePlant.FWT.medium.state.h
simpleBackPressurePlant.FWT.medium.state.p
simpleBackPressurePlant.FWT.medium.preferredMediumStates
simpleBackPressurePlant.FWT.medium.standardOrderComponents
simpleBackPressurePlant.FWT.medium.T_degC
simpleBackPressurePlant.FWT.medium.p_bar
simpleBackPressurePlant.FWT.medium.sat.psat
simpleBackPressurePlant.FWT.medium.sat.Tsat
simpleBackPressurePlant.FWT.ports[1].m_flow
simpleBackPressurePlant.FWT.ports[1].p
simpleBackPressurePlant.FWT.ports[1].h_outflow
simpleBackPressurePlant.FWT.flowDirection
simpleBackPressurePlant.FWT.use_p_in
simpleBackPressurePlant.FWT.use_h_in
simpleBackPressurePlant.FWT.use_X_in
simpleBackPressurePlant.FWT.use_C_in
simpleBackPressurePlant.FWT.p
simpleBackPressurePlant.FWT.h
simpleBackPressurePlant.FWT.X[1]
simpleBackPressurePlant.FWT.p_in_internal
simpleBackPressurePlant.FWT.h_in_internal
simpleBackPressurePlant.FWT.X_in_internal[1]
simpleBackPressurePlant.overStreamClap.p_a_nominal
simpleBackPressurePlant.overStreamClap.p_b_nominal
simpleBackPressurePlant.overStreamClap.m_flow_nominal
simpleBackPressurePlant.overStreamClap.K
simpleBackPressurePlant.FWT_valve.p_a_nominal
simpleBackPressurePlant.FWT_valve.p_b_nominal
simpleBackPressurePlant.FWT_valve.m_flow_nominal
simpleBackPressurePlant.FWT_valve.K
simpleBackPressurePlant.FWT_valve.port_a.h_outflow
simpleBackPressurePlant.FWT_valve.port_b.p
simpleBackPressurePlant.bypassValve.allowFlowReversal
simpleBackPressurePlant.bypassValve.port_a_exposesState
simpleBackPressurePlant.bypassValve.port_b_exposesState
simpleBackPressurePlant.bypassValve.showDesignFlowDirection
simpleBackPressurePlant.bypassValve.dp_start
simpleBackPressurePlant.bypassValve.m_flow_start
simpleBackPressurePlant.bypassValve.m_flow_small
simpleBackPressurePlant.bypassValve.show_T
simpleBackPressurePlant.bypassValve.show_V_flow
simpleBackPressurePlant.bypassValve.dp
simpleBackPressurePlant.bypassValve.V_flow
simpleBackPressurePlant.bypassValve.port_a_T
simpleBackPressurePlant.bypassValve.port_b_T
simpleBackPressurePlant.bypassValve.state_a.phase
simpleBackPressurePlant.bypassValve.state_a.d
simpleBackPressurePlant.bypassValve.state_a.T
simpleBackPressurePlant.bypassValve.state_b.phase
simpleBackPressurePlant.bypassValve.state_b.d
simpleBackPressurePlant.bypassValve.state_b.T
simpleBackPressurePlant.bypassValve.dp_nominal
simpleBackPressurePlant.bypassValve.m_flow_nominal
simpleBackPressurePlant.bypassValve.k
simpleBackPressurePlant.splitBypass.port_1.m_flow
simpleBackPressurePlant.splitBypass.port_3.m_flow
simpleBackPressurePlant.splitBypass.portFlowDirection_1
simpleBackPressurePlant.splitBypass.portFlowDirection_2
simpleBackPressurePlant.splitBypass.portFlowDirection_3
simpleBackPressurePlant.splitBypass.fluidVolume
simpleBackPressurePlant.splitBypass.energyDynamics
simpleBackPressurePlant.splitBypass.massDynamics
simpleBackPressurePlant.splitBypass.substanceDynamics
simpleBackPressurePlant.splitBypass.traceDynamics
simpleBackPressurePlant.splitBypass.p_start
simpleBackPressurePlant.splitBypass.use_T_start
simpleBackPressurePlant.splitBypass.T_start
simpleBackPressurePlant.splitBypass.h_start
simpleBackPressurePlant.splitBypass.X_start[1]
simpleBackPressurePlant.splitBypass.medium.p
simpleBackPressurePlant.splitBypass.medium.der(p)
simpleBackPressurePlant.splitBypass.medium.h
simpleBackPressurePlant.splitBypass.medium.der(h)
simpleBackPressurePlant.splitBypass.medium.d
simpleBackPressurePlant.splitBypass.medium.der(d)
simpleBackPressurePlant.splitBypass.medium.T
simpleBackPressurePlant.splitBypass.medium.X[1]
simpleBackPressurePlant.splitBypass.medium.u
simpleBackPressurePlant.splitBypass.medium.der(u)
simpleBackPressurePlant.splitBypass.medium.R
simpleBackPressurePlant.splitBypass.medium.MM
simpleBackPressurePlant.splitBypass.medium.state.phase
simpleBackPressurePlant.splitBypass.medium.preferredMediumStates
simpleBackPressurePlant.splitBypass.medium.standardOrderComponents
simpleBackPressurePlant.splitBypass.medium.T_degC
simpleBackPressurePlant.splitBypass.medium.p_bar
simpleBackPressurePlant.splitBypass.medium.sat.Tsat
simpleBackPressurePlant.splitBypass.U
simpleBackPressurePlant.splitBypass.der(U)
simpleBackPressurePlant.splitBypass.m
simpleBackPressurePlant.splitBypass.der(m)
simpleBackPressurePlant.splitBypass.Qb_flow
simpleBackPressurePlant.splitBypass.Wb_flow
simpleBackPressurePlant.splitBypass.initialize_p
simpleBackPressurePlant.splitBypass.V
simpleBackPressurePlant.generator.eta
simpleBackPressurePlant.generator.omega
simpleBackPressurePlant.generator.shaft.der(phi)
simpleBackPressurePlant.generator.shaft.tau
simpleBackPressurePlant.LP.V_bleed
simpleBackPressurePlant.LP.K1
simpleBackPressurePlant.LP.K2
simpleBackPressurePlant.LP.m_flow_nominal1
simpleBackPressurePlant.LP.m_flow_nominal2
simpleBackPressurePlant.LP.p_a_nominal
simpleBackPressurePlant.LP.p_b_nominal
simpleBackPressurePlant.LP.p_c_nominal
simpleBackPressurePlant.LP.h_a_nominal
simpleBackPressurePlant.LP.h_c_nominal
simpleBackPressurePlant.LP.allowFlowReversal
simpleBackPressurePlant.LP.energyDynamics
simpleBackPressurePlant.LP.massDynamics
simpleBackPressurePlant.LP.p_a_start
simpleBackPressurePlant.LP.use_T_a_start
simpleBackPressurePlant.LP.T_a_start
simpleBackPressurePlant.LP.h_a_start
simpleBackPressurePlant.LP.W
simpleBackPressurePlant.LP.flange_a.phi
simpleBackPressurePlant.LP.flange_a.tau
simpleBackPressurePlant.LP.flange_b.phi
simpleBackPressurePlant.LP.port_c.h_outflow
simpleBackPressurePlant.LP.stage1.state_a.phase
simpleBackPressurePlant.LP.stage1.state_a.d
simpleBackPressurePlant.LP.stage1.state_a.T
simpleBackPressurePlant.LP.stage1.W
simpleBackPressurePlant.LP.stage1.eta_is
simpleBackPressurePlant.LP.stage1.h_b_is
simpleBackPressurePlant.LP.stage1.tau
simpleBackPressurePlant.LP.stage1.allowFlowReversal
simpleBackPressurePlant.LP.stage1.flange_a.phi
simpleBackPressurePlant.LP.stage1.flange_a.der(phi)
simpleBackPressurePlant.LP.stage1.flange_a.tau
simpleBackPressurePlant.LP.stage1.flange_b.phi
simpleBackPressurePlant.LP.stage1.K
simpleBackPressurePlant.LP.stage1.h_a_nominal
simpleBackPressurePlant.LP.stage1.m_flow_nominal
simpleBackPressurePlant.LP.stage1.p_a_nominal
simpleBackPressurePlant.LP.stage1.p_b_nominal
simpleBackPressurePlant.LP.stage2.state_a.phase
simpleBackPressurePlant.LP.stage2.state_a.d
simpleBackPressurePlant.LP.stage2.state_a.T
simpleBackPressurePlant.LP.stage2.W
simpleBackPressurePlant.LP.stage2.eta_is
simpleBackPressurePlant.LP.stage2.h_b_is
simpleBackPressurePlant.LP.stage2.tau
simpleBackPressurePlant.LP.stage2.allowFlowReversal
simpleBackPressurePlant.LP.stage2.flange_a.phi
simpleBackPressurePlant.LP.stage2.flange_a.der(phi)
simpleBackPressurePlant.LP.stage2.flange_b.phi
simpleBackPressurePlant.LP.stage2.K
simpleBackPressurePlant.LP.stage2.h_a_nominal
simpleBackPressurePlant.LP.stage2.m_flow_nominal
simpleBackPressurePlant.LP.stage2.p_a_nominal
simpleBackPressurePlant.LP.stage2.p_b_nominal
simpleBackPressurePlant.LP.splitter.portFlowDirection_1
simpleBackPressurePlant.LP.splitter.portFlowDirection_2
simpleBackPressurePlant.LP.splitter.portFlowDirection_3
simpleBackPressurePlant.LP.splitter.fluidVolume
simpleBackPressurePlant.LP.splitter.energyDynamics
simpleBackPressurePlant.LP.splitter.massDynamics
simpleBackPressurePlant.LP.splitter.substanceDynamics
simpleBackPressurePlant.LP.splitter.traceDynamics
simpleBackPressurePlant.LP.splitter.p_start
simpleBackPressurePlant.LP.splitter.use_T_start
simpleBackPressurePlant.LP.splitter.T_start
simpleBackPressurePlant.LP.splitter.h_start
simpleBackPressurePlant.LP.splitter.X_start[1]
simpleBackPressurePlant.LP.splitter.medium.p
simpleBackPressurePlant.LP.splitter.medium.der(p)
simpleBackPressurePlant.LP.splitter.medium.h
simpleBackPressurePlant.LP.splitter.medium.der(h)
simpleBackPressurePlant.LP.splitter.medium.d
simpleBackPressurePlant.LP.splitter.medium.der(d)
simpleBackPressurePlant.LP.splitter.medium.T
simpleBackPressurePlant.LP.splitter.medium.X[1]
simpleBackPressurePlant.LP.splitter.medium.u
simpleBackPressurePlant.LP.splitter.medium.der(u)
simpleBackPressurePlant.LP.splitter.medium.R
simpleBackPressurePlant.LP.splitter.medium.MM
simpleBackPressurePlant.LP.splitter.medium.state.phase
simpleBackPressurePlant.LP.splitter.medium.preferredMediumStates
simpleBackPressurePlant.LP.splitter.medium.standardOrderComponents
simpleBackPressurePlant.LP.splitter.medium.T_degC
simpleBackPressurePlant.LP.splitter.medium.p_bar
simpleBackPressurePlant.LP.splitter.medium.sat.Tsat
simpleBackPressurePlant.LP.splitter.U
simpleBackPressurePlant.LP.splitter.der(U)
simpleBackPressurePlant.LP.splitter.m
simpleBackPressurePlant.LP.splitter.der(m)
simpleBackPressurePlant.LP.splitter.Qb_flow
simpleBackPressurePlant.LP.splitter.Wb_flow
simpleBackPressurePlant.LP.splitter.initialize_p
simpleBackPressurePlant.LP.splitter.V
simpleBackPressurePlant.HP.V_bleed
simpleBackPressurePlant.HP.K1
simpleBackPressurePlant.HP.K2
simpleBackPressurePlant.HP.m_flow_nominal1
simpleBackPressurePlant.HP.m_flow_nominal2
simpleBackPressurePlant.HP.p_a_nominal
simpleBackPressurePlant.HP.p_b_nominal
simpleBackPressurePlant.HP.p_c_nominal
simpleBackPressurePlant.HP.h_a_nominal
simpleBackPressurePlant.HP.h_c_nominal
simpleBackPressurePlant.HP.allowFlowReversal
simpleBackPressurePlant.HP.energyDynamics
simpleBackPressurePlant.HP.massDynamics
simpleBackPressurePlant.HP.p_c_start
simpleBackPressurePlant.HP.use_T_c_start
simpleBackPressurePlant.HP.T_c_start
simpleBackPressurePlant.HP.h_c_start
simpleBackPressurePlant.HP.W
simpleBackPressurePlant.HP.port_a.p
simpleBackPressurePlant.HP.port_a.h_outflow
simpleBackPressurePlant.HP.port_b.h_outflow
simpleBackPressurePlant.HP.flange_a.phi
simpleBackPressurePlant.HP.flange_a.tau
simpleBackPressurePlant.HP.flange_b.phi
simpleBackPressurePlant.HP.stage1.state_a.phase
simpleBackPressurePlant.HP.stage1.state_a.d
simpleBackPressurePlant.HP.stage1.state_a.T
simpleBackPressurePlant.HP.stage1.W
simpleBackPressurePlant.HP.stage1.eta_is
simpleBackPressurePlant.HP.stage1.h_b_is
simpleBackPressurePlant.HP.stage1.tau
simpleBackPressurePlant.HP.stage1.allowFlowReversal
simpleBackPressurePlant.HP.stage1.flange_a.phi
simpleBackPressurePlant.HP.stage1.flange_a.der(phi)
simpleBackPressurePlant.HP.stage1.flange_a.tau
simpleBackPressurePlant.HP.stage1.flange_b.phi
simpleBackPressurePlant.HP.stage1.K
simpleBackPressurePlant.HP.stage1.h_a_nominal
simpleBackPressurePlant.HP.stage1.m_flow_nominal
simpleBackPressurePlant.HP.stage1.p_a_nominal
simpleBackPressurePlant.HP.stage1.p_b_nominal
simpleBackPressurePlant.HP.stage2.state_a.phase
simpleBackPressurePlant.HP.stage2.state_a.d
simpleBackPressurePlant.HP.stage2.state_a.T
simpleBackPressurePlant.HP.stage2.W
simpleBackPressurePlant.HP.stage2.eta_is
simpleBackPressurePlant.HP.stage2.h_b_is
simpleBackPressurePlant.HP.stage2.tau
simpleBackPressurePlant.HP.stage2.allowFlowReversal
simpleBackPressurePlant.HP.stage2.flange_a.phi
simpleBackPressurePlant.HP.stage2.flange_a.der(phi)
simpleBackPressurePlant.HP.stage2.flange_b.phi
simpleBackPressurePlant.HP.stage2.K
simpleBackPressurePlant.HP.stage2.h_a_nominal
simpleBackPressurePlant.HP.stage2.m_flow_nominal
simpleBackPressurePlant.HP.stage2.p_a_nominal
simpleBackPressurePlant.HP.stage2.p_b_nominal
simpleBackPressurePlant.HP.splitter.portFlowDirection_1
simpleBackPressurePlant.HP.splitter.portFlowDirection_2
simpleBackPressurePlant.HP.splitter.portFlowDirection_3
simpleBackPressurePlant.HP.splitter.fluidVolume
simpleBackPressurePlant.HP.splitter.energyDynamics
simpleBackPressurePlant.HP.splitter.massDynamics
simpleBackPressurePlant.HP.splitter.substanceDynamics
simpleBackPressurePlant.HP.splitter.traceDynamics
simpleBackPressurePlant.HP.splitter.p_start
simpleBackPressurePlant.HP.splitter.use_T_start
simpleBackPressurePlant.HP.splitter.T_start
simpleBackPressurePlant.HP.splitter.h_start
simpleBackPressurePlant.HP.splitter.X_start[1]
simpleBackPressurePlant.HP.splitter.medium.p
simpleBackPressurePlant.HP.splitter.medium.der(p)
simpleBackPressurePlant.HP.splitter.medium.h
simpleBackPressurePlant.HP.splitter.medium.der(h)
simpleBackPressurePlant.HP.splitter.medium.d
simpleBackPressurePlant.HP.splitter.medium.der(d)
simpleBackPressurePlant.HP.splitter.medium.T
simpleBackPressurePlant.HP.splitter.medium.X[1]
simpleBackPressurePlant.HP.splitter.medium.u
simpleBackPressurePlant.HP.splitter.medium.der(u)
simpleBackPressurePlant.HP.splitter.medium.R
simpleBackPressurePlant.HP.splitter.medium.MM
simpleBackPressurePlant.HP.splitter.medium.state.phase
simpleBackPressurePlant.HP.splitter.medium.preferredMediumStates
simpleBackPressurePlant.HP.splitter.medium.standardOrderComponents
simpleBackPressurePlant.HP.splitter.medium.T_degC
simpleBackPressurePlant.HP.splitter.medium.p_bar
simpleBackPressurePlant.HP.splitter.medium.sat.Tsat
simpleBackPressurePlant.HP.splitter.U
simpleBackPressurePlant.HP.splitter.der(U)
simpleBackPressurePlant.HP.splitter.m
simpleBackPressurePlant.HP.splitter.der(m)
simpleBackPressurePlant.HP.splitter.Qb_flow
simpleBackPressurePlant.HP.splitter.Wb_flow
simpleBackPressurePlant.HP.splitter.initialize_p
simpleBackPressurePlant.HP.splitter.V
simpleBackPressurePlant.T_liveSteam.allowFlowReversal
simpleBackPressurePlant.T_liveSteam.port_a.m_flow
simpleBackPressurePlant.T_liveSteam.port_b.m_flow
simpleBackPressurePlant.T_liveSteam.port_b.h_outflow
simpleBackPressurePlant.T_liveSteam.port_a_exposesState
simpleBackPressurePlant.T_liveSteam.port_b_exposesState
simpleBackPressurePlant.T_liveSteam.showDesignFlowDirection
simpleBackPressurePlant.T_liveSteam.m_flow_nominal
simpleBackPressurePlant.T_liveSteam.m_flow_small
simpleBackPressurePlant.T_liveSteam.T
simpleBackPressurePlant.liveSteam.nPorts
simpleBackPressurePlant.liveSteam.medium.h
simpleBackPressurePlant.liveSteam.medium.d
simpleBackPressurePlant.liveSteam.medium.T
simpleBackPressurePlant.liveSteam.medium.X[1]
simpleBackPressurePlant.liveSteam.medium.u
simpleBackPressurePlant.liveSteam.medium.R
simpleBackPressurePlant.liveSteam.medium.MM
simpleBackPressurePlant.liveSteam.medium.state.phase
simpleBackPressurePlant.liveSteam.medium.state.h
simpleBackPressurePlant.liveSteam.medium.preferredMediumStates
simpleBackPressurePlant.liveSteam.medium.standardOrderComponents
simpleBackPressurePlant.liveSteam.medium.T_degC
simpleBackPressurePlant.liveSteam.medium.p_bar
simpleBackPressurePlant.liveSteam.medium.sat.Tsat
simpleBackPressurePlant.liveSteam.ports[1].m_flow
simpleBackPressurePlant.liveSteam.ports[1].p
simpleBackPressurePlant.liveSteam.ports[1].h_outflow
simpleBackPressurePlant.liveSteam.flowDirection
simpleBackPressurePlant.liveSteam.use_m_flow_in
simpleBackPressurePlant.liveSteam.use_h_in
simpleBackPressurePlant.liveSteam.use_X_in
simpleBackPressurePlant.liveSteam.use_C_in
simpleBackPressurePlant.liveSteam.m_flow
simpleBackPressurePlant.liveSteam.h
simpleBackPressurePlant.liveSteam.X[1]
simpleBackPressurePlant.liveSteam.m_flow_in
simpleBackPressurePlant.liveSteam.m_flow_in_internal
simpleBackPressurePlant.liveSteam.h_in_internal
simpleBackPressurePlant.liveSteam.X_in_internal[1]
simpleBackPressurePlant.dh_return.m_flow
simpleBackPressurePlant.dh_return.p
simpleBackPressurePlant.dh_forward.m_flow
simpleBackPressurePlant.dh_forward.p
simpleBackPressurePlant.u_load
simpleBackPressurePlant.turbineValve.allowFlowReversal
simpleBackPressurePlant.turbineValve.port_a_exposesState
simpleBackPressurePlant.turbineValve.port_b_exposesState
simpleBackPressurePlant.turbineValve.showDesignFlowDirection
simpleBackPressurePlant.turbineValve.dp_start
simpleBackPressurePlant.turbineValve.m_flow_start
simpleBackPressurePlant.turbineValve.m_flow_small
simpleBackPressurePlant.turbineValve.show_T
simpleBackPressurePlant.turbineValve.show_V_flow
simpleBackPressurePlant.turbineValve.dp
simpleBackPressurePlant.turbineValve.V_flow
simpleBackPressurePlant.turbineValve.port_a_T
simpleBackPressurePlant.turbineValve.port_b_T
simpleBackPressurePlant.turbineValve.state_a.phase
simpleBackPressurePlant.turbineValve.state_a.d
simpleBackPressurePlant.turbineValve.state_a.T
simpleBackPressurePlant.turbineValve.state_b.phase
simpleBackPressurePlant.turbineValve.state_b.d
simpleBackPressurePlant.turbineValve.state_b.T
simpleBackPressurePlant.turbineValve.dp_nominal
simpleBackPressurePlant.turbineValve.m_flow_nominal
simpleBackPressurePlant.turbineValve.k
simpleBackPressurePlant.turbineValve.opening_min
simpleBackPressurePlant.u_TAV
simpleBackPressurePlant.deaerator.sat.Tsat
simpleBackPressurePlant.deaerator.Vt
simpleBackPressurePlant.deaerator.p_start
simpleBackPressurePlant.deaerator.Vl_start
simpleBackPressurePlant.deaerator.hv
simpleBackPressurePlant.deaerator.der(hv)
simpleBackPressurePlant.deaerator.hl
simpleBackPressurePlant.deaerator.der(hl)
simpleBackPressurePlant.deaerator.rho_v
simpleBackPressurePlant.deaerator.der(rho_v)
simpleBackPressurePlant.deaerator.rho_l
simpleBackPressurePlant.deaerator.der(rho_l)
simpleBackPressurePlant.deaerator.U
simpleBackPressurePlant.deaerator.der(U)
simpleBackPressurePlant.deaerator.m
simpleBackPressurePlant.deaerator.der(m)
simpleBackPressurePlant.deaerator.mv
simpleBackPressurePlant.deaerator.der(mv)
simpleBackPressurePlant.deaerator.ml
simpleBackPressurePlant.deaerator.der(ml)
simpleBackPressurePlant.deaerator.Vv
simpleBackPressurePlant.deaerator.Vl
simpleBackPressurePlant.deaerator.der(Vl)
simpleBackPressurePlant.deaerator.mc
simpleBackPressurePlant.deaerator.condensate.m_flow
simpleBackPressurePlant.deaerator.VlVt_ratio
load.height
load.duration
load.offset
load.startTime
load.y
closeTAV.startTime
closeTAV.startValue
CPUtime
EventCounter

double initialValue(807,6)
  0 1.0132500000000000E+005       0                 1.0000000000000000E+100
  6   256   # system.p_ambient
  0 2.9314999999999998E+002       0                 1.0000000000000000E+100
  6   256   # system.T_ambient
  0 9.8066499999999994E+000       0                       0                
  6   256   # system.g
  0       0                       0                       0                
  6   257   # system.allowFlowReversal
  0       3                       1                       4                
  6   258   # system.energyDynamics
  0       3                       1                       4                
  6   258   # system.massDynamics
  0       3                       1                       4                
  6   258   # system.substanceDynamics
  0       3                       1                       4                
  6   258   # system.traceDynamics
  0       4                       1                       4                
  6   258   # system.momentumDynamics
  0       0                       0                       0                
  6   256   # system.m_flow_start
  0 1.0132500000000000E+005       0                 1.0000000000000000E+100
  6   256   # system.p_start
  0 2.9314999999999998E+002       0                 1.0000000000000000E+100
  6   256   # system.T_start
  0       0                       0                       0                
  6   257   # system.use_eps_Re
  0       1                       0                       0                
  6   256   # system.m_flow_nominal
  0 1.0000000000000000E-004       0                 1.0000000000000000E+100
  6   256   # system.eps_m_flow
  0       1                       0                 1.0000000000000000E+100
  6   256   # system.dp_small
  0 1.0000000000000000E-002       0                 1.0000000000000000E+100
  6   256   # system.m_flow_small
  0       1                       0                       0                
  6   258   # CoolantInlet.nPorts
  0 6.0000000000000000E+005       0                 1.0000000000000000E+100
  6   256   # CoolantInlet.medium.p
  0     150                       0                  100000                
  6   256   # CoolantInlet.medium.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # CoolantInlet.medium.T
  0       1                       0                       1                
  6   256   # CoolantInlet.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # CoolantInlet.medium.u
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6   256   # CoolantInlet.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # CoolantInlet.medium.MM
  0       1                       0                       2                
  6   258   # CoolantInlet.medium.state.phase
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # CoolantInlet.medium.state.p
  0       0                       0                       0                
  6   257   # CoolantInlet.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # CoolantInlet.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # CoolantInlet.medium.T_degC
  0 6.0000000000000009E+000       0                       0                
  6   256   # CoolantInlet.medium.p_bar
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # CoolantInlet.medium.sat.psat
  0 4.3198242395448477E+002 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # CoolantInlet.medium.sat.Tsat
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].molarMass
  0 6.4709600000000000E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].criticalTemperature
  0 2.2064000000000000E+007       0                 1.0000000000000000E+008
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].criticalPressure
  0 5.5948037267080745E-005 9.9999999999999995E-007 1.0000000000000000E+006
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].criticalMolarVolume
  0 3.4399999999999997E-001       0                       0                
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].acentricFactor
  0 2.7316000000000003E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].triplePointTemperature
  0 6.1165700000000004E+002       0                 1.0000000000000000E+008
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].triplePointPressure
  0 2.7314999999999998E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].meltingPoint
  0 3.7312400000000002E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].normalBoilingPoint
  0 1.8000000000000000E+000       0                       2                
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].dipoleMoment
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasIdealGasHeatCapacity
  0       1                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasCriticalData
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasDipoleMoment
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasFundamentalEquation
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasLiquidHeatCapacity
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasSolidHeatCapacity
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasAccurateViscosityData
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasAccurateConductivityData
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasVapourPressureCurve
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.waterConstants[1].hasAcentricFactor
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].HCRIT0
  0       0                 -1.0000000000000000E+007 1.0000000000000000E+007
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].SCRIT0
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].deltah
  0       0                 -1.0000000000000000E+007 1.0000000000000000E+007
  6  1280   # _GlobalScope.Modelica.Media.Water.waterConstants[1].deltas
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].molarMass
  0 6.4709600000000000E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalTemperature
  0 2.2064000000000000E+007       0                 1.0000000000000000E+008
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalPressure
  0 5.5948037267080745E-005 9.9999999999999995E-007 1.0000000000000000E+006
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalMolarVolume
  0 3.4399999999999997E-001       0                       0                
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].acentricFactor
  0 2.7316000000000003E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].triplePointTemperature
  0 6.1165700000000004E+002       0                 1.0000000000000000E+008
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].triplePointPressure
  0 2.7314999999999998E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].meltingPoint
  0 3.7312400000000002E+002       1                   10000                
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].normalBoilingPoint
  0 1.8000000000000000E+000       0                       2                
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].dipoleMoment
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasIdealGasHeatCapacity
  0       1                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasCriticalData
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasDipoleMoment
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasFundamentalEquation
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasLiquidHeatCapacity
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasSolidHeatCapacity
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAccurateViscosityData
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAccurateConductivityData
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasVapourPressureCurve
  0       0                       0                       0                
  6  1281   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAcentricFactor
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].HCRIT0
  0       0                 -1.0000000000000000E+007 1.0000000000000000E+007
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].SCRIT0
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].deltah
  0       0                 -1.0000000000000000E+007 1.0000000000000000E+007
  6  1280   # _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].deltas
  0 -1.1967000000000000E+002 -9.9999999999999995E+059 9.9999999999999995E+059
  6   388   # CoolantInlet.ports[1].m_flow
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # CoolantInlet.ports[1].p
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # CoolantInlet.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # CoolantInlet.flowDirection
  0       0                       0                       0                
  6   769   # CoolantInlet.use_m_flow_in
  0       0                       0                       0                
  6   769   # CoolantInlet.use_T_in
  0       0                       0                       0                
  6   769   # CoolantInlet.use_X_in
  0       0                       0                       0                
  6   769   # CoolantInlet.use_C_in
  0 1.1967000000000000E+002 -100000                  100000                
  6   256   # CoolantInlet.m_flow
  0 3.2135000000000002E+002 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # CoolantInlet.T
  0       1                       0                       1                
  6   256   # CoolantInlet.X[1]
  0 1.1967000000000000E+002       0                       0                
  6  1280   # CoolantInlet.m_flow_in_internal
  0 3.2135000000000002E+002       0                       0                
  6  1280   # CoolantInlet.T_in_internal
  0       1                       0                       0                
  6  1280   # CoolantInlet.X_in_internal[1]
  0       1                       0                       0                
  6  1282   # CoolantOutlet.nPorts
  0 6.0000000000000000E+005       0                 1.0000000000000000E+100
  6  1280   # CoolantOutlet.medium.p
  0     150                       0                  100000                
  6  1280   # CoolantOutlet.medium.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6  1280   # CoolantOutlet.medium.T
  0       1                       0                       1                
  6  1280   # CoolantOutlet.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # CoolantOutlet.medium.u
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6  1280   # CoolantOutlet.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # CoolantOutlet.medium.MM
  0       1                       0                       2                
  6  1282   # CoolantOutlet.medium.state.phase
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6  1280   # CoolantOutlet.medium.state.p
  0       0                       0                       0                
  6  1281   # CoolantOutlet.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # CoolantOutlet.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # CoolantOutlet.medium.T_degC
  0 6.0000000000000009E+000       0                       0                
  6  1280   # CoolantOutlet.medium.p_bar
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6  1280   # CoolantOutlet.medium.sat.psat
  0 4.3198242395448477E+002 2.7314999999999998E+002 2.2731500000000001E+003
  6  1280   # CoolantOutlet.medium.sat.Tsat
  0 1.1967000000000000E+002 -9.9999999999999995E+059 9.9999999999999995E+059
  6  1412   # CoolantOutlet.ports[1].m_flow
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6  1284   # CoolantOutlet.ports[1].p
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # CoolantOutlet.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # CoolantOutlet.flowDirection
  0       0                       0                       0                
  6   769   # CoolantOutlet.use_p_in
  0       0                       0                       0                
  6   769   # CoolantOutlet.use_T_in
  0       0                       0                       0                
  6   769   # CoolantOutlet.use_X_in
  0       0                       0                       0                
  6   769   # CoolantOutlet.use_C_in
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6  1280   # CoolantOutlet.p
  0 3.4314999999999998E+002 2.7314999999999998E+002 2.2731500000000001E+003
  6  1280   # CoolantOutlet.T
  0       1                       0                       1                
  6  1280   # CoolantOutlet.X[1]
  0 6.0000000000000000E+005       0                       0                
  6  1280   # CoolantOutlet.p_in_internal
  0 3.4314999999999998E+002       0                       0                
  6  1280   # CoolantOutlet.T_in_internal
  0       1                       0                       0                
  6  1280   # CoolantOutlet.X_in_internal[1]
  0     -10                       0                       0                
  6   256   # temperature.height
  0      20                       0                 1.0000000000000000E+100
  6   256   # temperature.duration
  0      40                       0                       0                
  6   256   # temperature.offset
  0      40                       0                       0                
  6   256   # temperature.startTime
  0       0                       0                       0                
  6   256   # temperature.y
  0       0                       0                       0                
  6  1280   # toKelvin.Kelvin
  0       0                       0                       0                
  6   257   # T_fwd.allowFlowReversal
  0 1.1967000000000000E+002       0                  100000                
  6   388   # T_fwd.port_a.m_flow
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # T_fwd.port_a.p
  0 -1.1967000000000000E+002 -100000                       0                
  6   388   # T_fwd.port_b.m_flow
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # T_fwd.port_b.p
  0       0                       0                       0                
  6  1281   # T_fwd.port_a_exposesState
  0       0                       0                       0                
  6  1281   # T_fwd.port_b_exposesState
  0       1                       0                       0                
  6  1281   # T_fwd.showDesignFlowDirection
  0       1                 -100000                  100000                
  6   256   # T_fwd.m_flow_nominal
  0 1.0000000000000000E-002       0                  100000                
  6   256   # T_fwd.m_flow_small
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # T_fwd.T
  0       1                       0                       0                
  6   256   # bypassDegree.height
  0      60                       0                 1.0000000000000000E+100
  6   256   # bypassDegree.duration
  0       0                       0                       0                
  6   256   # bypassDegree.offset
  0      20                       0                       0                
  6   256   # bypassDegree.startTime
  0       0                       0                       1                
  6   256   # bypassDegree.y
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.Q
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.P
  0 6.0000000000000000E+005       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.DH1.mediumCold.p
 -1 2.9300000000000000E+005 -1.0000000000000000E+010 1.0000000000000000E+010
  2   272   # simpleBackPressurePlant.DH1.mediumCold.h
  0       0                       0                       0                
  3   256   # simpleBackPressurePlant.DH1.mediumCold.der(h)
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.DH1.mediumCold.T
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.DH1.mediumCold.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.DH1.mediumCold.u
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.DH1.mediumCold.der(u)
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6   256   # simpleBackPressurePlant.DH1.mediumCold.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # simpleBackPressurePlant.DH1.mediumCold.MM
  0       1                       0                       2                
  6   354   # simpleBackPressurePlant.DH1.mediumCold.state.phase
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.DH1.mediumCold.state.p
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.DH1.mediumCold.preferredMediumStates
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.DH1.mediumCold.standardOrderComponents
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.DH1.mediumCold.T_degC
  0 6.0000000000000009E+000       0                       0                
  6   256   # simpleBackPressurePlant.DH1.mediumCold.p_bar
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.DH1.mediumCold.sat.psat
  0 4.3198242395448477E+002 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.DH1.mediumCold.sat.Tsat
  0 3.4314999999999998E+002 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.DH1.T_sat_nominal
  0 3.1200635696061850E+004 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.DH1.p_sat_nominal
  0   45400                 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.DH1.p_c_nominal
  0 5.0739999999999998E+000       0                       0                
  6   256   # simpleBackPressurePlant.DH1.m_flow_c_nominal
  0 5.5152852112495998E+002       0                       0                
  6   256   # simpleBackPressurePlant.DH1.K
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.DH1.allowFlowReversal
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.DH1.energyDynamics_cold
  0       1                       0                       0                
  6   256   # simpleBackPressurePlant.DH1.V_cold
  0 1.0132500000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.DH1.p_cold_start
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.DH1.use_T_cold_start
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.DH1.T_cold_start
  0 2.9300000000000000E+005 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.DH1.h_cold_start
  0 5.0739999999999998E+000       0                       0                
  6   256   # simpleBackPressurePlant.DH1.m_flow_c_start
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.DH1.Q
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.DH1.h_sat
  0 5.0000000000000000E+006 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.DH1.p_sat
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.DH1.m_cold
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.DH1.der(m_cold)
  0 1.4199364303938150E+004       0                       0                
  6  1280   # simpleBackPressurePlant.DH1.dp_hot_nominal
  0       0                       0                       0                
  6  1280   # simpleBackPressurePlant.DH1.Uc
  0       0                       0                       0                
  6  1280   # simpleBackPressurePlant.DH1.der(Uc)
  0       0                       0                       0                
  6  1280   # simpleBackPressurePlant.DH1.dp_hot
  0 1.1967000000000000E+002       0                  100000                
  6   388   # simpleBackPressurePlant.DH1.port_a.m_flow
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # simpleBackPressurePlant.DH1.port_a.p
  0 -1.1967000000000000E+002 -100000                       0                
  6   388   # simpleBackPressurePlant.DH1.port_b.m_flow
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # simpleBackPressurePlant.DH1.port_b.p
  0 5.0739999999999998E+000       0                  100000                
  6   388   # simpleBackPressurePlant.DH1.port_c.m_flow
  0 6.0000000000000000E+005       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.DH2.mediumCold.p
 -1 3.5300000000000000E+005 -1.0000000000000000E+010 1.0000000000000000E+010
  2   272   # simpleBackPressurePlant.DH2.mediumCold.h
  0       0                       0                       0                
  3   256   # simpleBackPressurePlant.DH2.mediumCold.der(h)
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.DH2.mediumCold.T
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.DH2.mediumCold.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.DH2.mediumCold.u
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.DH2.mediumCold.der(u)
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6   256   # simpleBackPressurePlant.DH2.mediumCold.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # simpleBackPressurePlant.DH2.mediumCold.MM
  0       1                       0                       2                
  6   354   # simpleBackPressurePlant.DH2.mediumCold.state.phase
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.DH2.mediumCold.state.p
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.DH2.mediumCold.preferredMediumStates
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.DH2.mediumCold.standardOrderComponents
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.DH2.mediumCold.T_degC
  0 6.0000000000000009E+000       0                       0                
  6   256   # simpleBackPressurePlant.DH2.mediumCold.p_bar
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.DH2.mediumCold.sat.psat
  0 4.3198242395448477E+002 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.DH2.mediumCold.sat.Tsat
  0 3.5735000000000002E+002 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.DH2.T_sat_nominal
  0 5.6076068642834216E+004 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.DH2.p_sat_nominal
  0   62200                 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.DH2.p_c_nominal
  0 3.2460000000000000E+000       0                       0                
  6   256   # simpleBackPressurePlant.DH2.m_flow_c_nominal
  0 5.8121027455050455E+002       0                       0                
  6   256   # simpleBackPressurePlant.DH2.K
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.DH2.allowFlowReversal
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.DH2.energyDynamics_cold
  0       1                       0                       0                
  6   256   # simpleBackPressurePlant.DH2.V_cold
  0 1.0132500000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.DH2.p_cold_start
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.DH2.use_T_cold_start
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.DH2.T_cold_start
  0 3.5300000000000000E+005 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.DH2.h_cold_start
  0 3.2460000000000000E+000       0                       0                
  6   256   # simpleBackPressurePlant.DH2.m_flow_c_start
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.DH2.Q
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.DH2.h_sat
  0 5.0000000000000000E+006 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.DH2.p_sat
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.DH2.m_cold
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.DH2.der(m_cold)
  0 6.1239313571657840E+003       0                       0                
  6  1280   # simpleBackPressurePlant.DH2.dp_hot_nominal
  0       0                       0                       0                
  6  1280   # simpleBackPressurePlant.DH2.Uc
  0       0                       0                       0                
  6  1280   # simpleBackPressurePlant.DH2.der(Uc)
  0       0                       0                       0                
  6  1280   # simpleBackPressurePlant.DH2.dp_hot
  0 1.1967000000000000E+002       0                  100000                
  6   388   # simpleBackPressurePlant.DH2.port_a.m_flow
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # simpleBackPressurePlant.DH2.port_a.p
  0 -1.1967000000000000E+002 -100000                       0                
  6   388   # simpleBackPressurePlant.DH2.port_b.m_flow
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # simpleBackPressurePlant.DH2.port_b.p
  0 3.2460000000000000E+000       0                  100000                
  6   420   # simpleBackPressurePlant.DH2.port_c.m_flow
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.T_DH1.allowFlowReversal
  0 1.1967000000000000E+002       0                  100000                
  6   388   # simpleBackPressurePlant.T_DH1.port_a.m_flow
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # simpleBackPressurePlant.T_DH1.port_a.p
  0 -1.1967000000000000E+002 -100000                       0                
  6   388   # simpleBackPressurePlant.T_DH1.port_b.m_flow
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # simpleBackPressurePlant.T_DH1.port_b.p
  0       0                       0                       0                
  6  1281   # simpleBackPressurePlant.T_DH1.port_a_exposesState
  0       0                       0                       0                
  6  1281   # simpleBackPressurePlant.T_DH1.port_b_exposesState
  0       1                       0                       0                
  6  1281   # simpleBackPressurePlant.T_DH1.showDesignFlowDirection
  0       1                 -100000                  100000                
  6   256   # simpleBackPressurePlant.T_DH1.m_flow_nominal
  0 1.0000000000000000E-002       0                  100000                
  6   256   # simpleBackPressurePlant.T_DH1.m_flow_small
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.T_DH1.T
  0       1                       0                       0                
  6   258   # simpleBackPressurePlant.LPH2.nPorts
  0 2.5636000000000000E+006       0                       0                
  6   256   # simpleBackPressurePlant.LPH2.medium.h
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.LPH2.medium.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.LPH2.medium.T
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.LPH2.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.LPH2.medium.u
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6   256   # simpleBackPressurePlant.LPH2.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # simpleBackPressurePlant.LPH2.medium.MM
  0       1                       0                       2                
  6   322   # simpleBackPressurePlant.LPH2.medium.state.phase
  0 2.5636000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.LPH2.medium.state.h
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.LPH2.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.LPH2.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LPH2.medium.T_degC
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LPH2.medium.p_bar
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.LPH2.medium.sat.Tsat
  0 1.6800000000000001E-001 -9.9999999999999995E+059 9.9999999999999995E+059
  6   388   # simpleBackPressurePlant.LPH2.ports[1].m_flow
  0 1.0100000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # simpleBackPressurePlant.LPH2.ports[1].p
  0 2.5636000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # simpleBackPressurePlant.LPH2.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.LPH2.flowDirection
  0       0                       0                       0                
  6   769   # simpleBackPressurePlant.LPH2.use_m_flow_in
  0       0                       0                       0                
  6   769   # simpleBackPressurePlant.LPH2.use_h_in
  0       0                       0                       0                
  6   769   # simpleBackPressurePlant.LPH2.use_X_in
  0       0                       0                       0                
  6   769   # simpleBackPressurePlant.LPH2.use_C_in
  0 -1.6800000000000001E-001 -100000                  100000                
  6   256   # simpleBackPressurePlant.LPH2.m_flow
  0 2.5636000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.LPH2.h
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.LPH2.X[1]
  0 -1.6800000000000001E-001       0                       0                
  6  1280   # simpleBackPressurePlant.LPH2.m_flow_in_internal
  0 2.5636000000000000E+006       0                       0                
  6  1280   # simpleBackPressurePlant.LPH2.h_in_internal
  0       1                       0                       0                
  6  1280   # simpleBackPressurePlant.LPH2.X_in_internal[1]
  0       0                       0                  100000                
  6   388   # simpleBackPressurePlant.bleedHP12.port_1.m_flow
  0       0                 -100000                       0                
  6   388   # simpleBackPressurePlant.bleedHP12.port_2.m_flow
  0       0                 -100000                  100000                
  6   388   # simpleBackPressurePlant.bleedHP12.port_3.m_flow
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.bleedHP12.portFlowDirection_1
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.bleedHP12.portFlowDirection_2
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.bleedHP12.portFlowDirection_3
  0 1.0000000000000001E-001       0                       0                
  6   256   # simpleBackPressurePlant.bleedHP12.fluidVolume
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.bleedHP12.energyDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.bleedHP12.massDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.bleedHP12.substanceDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.bleedHP12.traceDynamics
  0 1.0100000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.bleedHP12.p_start
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.bleedHP12.use_T_start
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.bleedHP12.T_start
  0 2.5636000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.bleedHP12.h_start
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.bleedHP12.X_start[1]
 -1 1.0100000000000000E+005       0                 1.0000000000000000E+100
  2   304   # simpleBackPressurePlant.bleedHP12.medium.p
  0       0                       0                       0                
  3   256   # simpleBackPressurePlant.bleedHP12.medium.der(p)
 -1 2.5636000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  2   304   # simpleBackPressurePlant.bleedHP12.medium.h
  0       0                       0                       0                
  3   256   # simpleBackPressurePlant.bleedHP12.medium.der(h)
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.bleedHP12.medium.d
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.bleedHP12.medium.der(d)
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.bleedHP12.medium.T
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.bleedHP12.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.bleedHP12.medium.u
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.bleedHP12.medium.der(u)
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6   256   # simpleBackPressurePlant.bleedHP12.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # simpleBackPressurePlant.bleedHP12.medium.MM
  0       1                       0                       2                
  6   322   # simpleBackPressurePlant.bleedHP12.medium.state.phase
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.bleedHP12.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.bleedHP12.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.bleedHP12.medium.T_degC
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.bleedHP12.medium.p_bar
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.bleedHP12.medium.sat.Tsat
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.bleedHP12.U
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.bleedHP12.der(U)
  0       0                       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.bleedHP12.m
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.bleedHP12.der(m)
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.bleedHP12.Qb_flow
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.bleedHP12.Wb_flow
  0       1                       0                       0                
  6  1281   # simpleBackPressurePlant.bleedHP12.initialize_p
  0 1.0000000000000001E-001       0                       0                
  6   256   # simpleBackPressurePlant.bleedHP12.V
  0       0                       0                  100000                
  6   388   # simpleBackPressurePlant.mixer_DH1.port_1.m_flow
  0       0                       0                  100000                
  6   388   # simpleBackPressurePlant.mixer_DH1.port_3.m_flow
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.mixer_DH1.portFlowDirection_1
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.mixer_DH1.portFlowDirection_2
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.mixer_DH1.portFlowDirection_3
  0 1.0000000000000001E-001       0                       0                
  6   256   # simpleBackPressurePlant.mixer_DH1.fluidVolume
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.mixer_DH1.energyDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.mixer_DH1.massDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.mixer_DH1.substanceDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.mixer_DH1.traceDynamics
  0   45400                 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.mixer_DH1.p_start
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.mixer_DH1.use_T_start
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.mixer_DH1.T_start
  0 2.5170000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.mixer_DH1.h_start
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.mixer_DH1.X_start[1]
 -1   45400                 6.1165700000000004E+002 1.0000000000000000E+008
  2   304   # simpleBackPressurePlant.mixer_DH1.medium.p
  0       0                       0                       0                
  3   256   # simpleBackPressurePlant.mixer_DH1.medium.der(p)
 -1 2.5170000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  2   304   # simpleBackPressurePlant.mixer_DH1.medium.h
  0       0                       0                       0                
  3   256   # simpleBackPressurePlant.mixer_DH1.medium.der(h)
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.mixer_DH1.medium.d
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.mixer_DH1.medium.der(d)
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.mixer_DH1.medium.T
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.mixer_DH1.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.mixer_DH1.medium.u
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.mixer_DH1.medium.der(u)
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6   256   # simpleBackPressurePlant.mixer_DH1.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # simpleBackPressurePlant.mixer_DH1.medium.MM
  0       1                       0                       2                
  6   322   # simpleBackPressurePlant.mixer_DH1.medium.state.phase
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.mixer_DH1.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.mixer_DH1.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.mixer_DH1.medium.T_degC
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.mixer_DH1.medium.p_bar
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.mixer_DH1.medium.sat.Tsat
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.mixer_DH1.U
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.mixer_DH1.der(U)
  0       0                       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.mixer_DH1.m
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.mixer_DH1.der(m)
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.mixer_DH1.Qb_flow
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.mixer_DH1.Wb_flow
  0       1                       0                       0                
  6  1281   # simpleBackPressurePlant.mixer_DH1.initialize_p
  0 1.0000000000000001E-001       0                       0                
  6   256   # simpleBackPressurePlant.mixer_DH1.V
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.ve_DH2.allowFlowReversal
  0       0                       0                  100000                
  6   388   # simpleBackPressurePlant.ve_DH2.port_a.m_flow
  0       0                 -100000                       0                
  6   388   # simpleBackPressurePlant.ve_DH2.port_b.m_flow
  0       0                       0                       0                
  6  1281   # simpleBackPressurePlant.ve_DH2.port_a_exposesState
  0       0                       0                       0                
  6  1281   # simpleBackPressurePlant.ve_DH2.port_b_exposesState
  0       0                       0                       0                
  6  1281   # simpleBackPressurePlant.ve_DH2.showDesignFlowDirection
 -1   62100                 6.1165700000000004E+002 1.0000000000000000E+008
  2   272   # simpleBackPressurePlant.ve_DH2.medium.p
  0       0                       0                       0                
  3   256   # simpleBackPressurePlant.ve_DH2.medium.der(p)
 -1 2.5360000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  2   304   # simpleBackPressurePlant.ve_DH2.medium.h
  0       0                       0                       0                
  3   256   # simpleBackPressurePlant.ve_DH2.medium.der(h)
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.ve_DH2.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.ve_DH2.medium.u
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.ve_DH2.medium.der(u)
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6   256   # simpleBackPressurePlant.ve_DH2.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # simpleBackPressurePlant.ve_DH2.medium.MM
  0       1                       0                       2                
  6   322   # simpleBackPressurePlant.ve_DH2.medium.state.phase
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.ve_DH2.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.ve_DH2.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.ve_DH2.medium.T_degC
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.ve_DH2.medium.p_bar
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.ve_DH2.medium.sat.Tsat
  0       1                       0                       0                
  6   256   # simpleBackPressurePlant.ve_DH2.V
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.ve_DH2.use_HeatTransfer
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.ve_DH2.use_UA_exponent
  0   10000                       0                       0                
  6   256   # simpleBackPressurePlant.ve_DH2.UA_nominal
  0       1                 1.0000000000000000E-004 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.ve_DH2.m_flow_nominal
  0 8.0000000000000004E-001       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.ve_DH2.UA_exponent
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.ve_DH2.energyDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.ve_DH2.massDynamics
  0   62100                 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.ve_DH2.p_start
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.ve_DH2.use_T_start
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.ve_DH2.T_start
  0 2.5360000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.ve_DH2.h_start
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.ve_DH2.X_start[1]
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.ve_DH2.use_homotopy
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.ve_DH2.U
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.ve_DH2.der(U)
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.ve_DH2.T
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.ve_DH2.m
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.ve_DH2.der(m)
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.ve_DH2.UA
  0       0                       0                       0                
  6   388   # simpleBackPressurePlant.ve_DH2.heatPort.Q_flow
  0       1                       0                       0                
  6  1281   # simpleBackPressurePlant.ve_DH2.initialize_p
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1280   # simpleBackPressurePlant.ve_DH2.h_a
  0       1                       0                       0                
  6   258   # simpleBackPressurePlant.FWT.nPorts
  0 2.7000000000000000E+005       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.FWT.medium.p
  0 2.5636000000000000E+006       0                       0                
  6   256   # simpleBackPressurePlant.FWT.medium.h
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.FWT.medium.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.FWT.medium.T
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.FWT.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.FWT.medium.u
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6   256   # simpleBackPressurePlant.FWT.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # simpleBackPressurePlant.FWT.medium.MM
  0       1                       0                       2                
  6   258   # simpleBackPressurePlant.FWT.medium.state.phase
  0 2.5636000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.FWT.medium.state.h
  0 2.7000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.FWT.medium.state.p
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.FWT.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.FWT.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.FWT.medium.T_degC
  0 2.7000000000000002E+000       0                       0                
  6   256   # simpleBackPressurePlant.FWT.medium.p_bar
  0 2.7000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.FWT.medium.sat.psat
  0 4.0311786982589780E+002 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.FWT.medium.sat.Tsat
  0       0                       0                  100000                
  6   388   # simpleBackPressurePlant.FWT.ports[1].m_flow
  0 2.7000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # simpleBackPressurePlant.FWT.ports[1].p
  0 2.5636000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # simpleBackPressurePlant.FWT.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.FWT.flowDirection
  0       0                       0                       0                
  6   769   # simpleBackPressurePlant.FWT.use_p_in
  0       0                       0                       0                
  6   769   # simpleBackPressurePlant.FWT.use_h_in
  0       0                       0                       0                
  6   769   # simpleBackPressurePlant.FWT.use_X_in
  0       0                       0                       0                
  6   769   # simpleBackPressurePlant.FWT.use_C_in
  0 2.7000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.FWT.p
  0 2.5636000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.FWT.h
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.FWT.X[1]
  0 2.7000000000000000E+005       0                       0                
  6  1280   # simpleBackPressurePlant.FWT.p_in_internal
  0 2.5636000000000000E+006       0                       0                
  6  1280   # simpleBackPressurePlant.FWT.h_in_internal
  0       1                       0                       0                
  6  1280   # simpleBackPressurePlant.FWT.X_in_internal[1]
  0 1.0100000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.overStreamClap.p_a_nominal
  0   97400                 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.overStreamClap.p_b_nominal
  0 8.2989999999999995E+000 -100000                  100000                
  6   256   # simpleBackPressurePlant.overStreamClap.m_flow_nominal
  0 4.3378720327750335E+002       0                       0                
  6   256   # simpleBackPressurePlant.overStreamClap.K
  0 5.9100000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.FWT_valve.p_a_nominal
  0 2.7000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.FWT_valve.p_b_nominal
  0 4.5800000000000002E-001 -100000                  100000                
  6   256   # simpleBackPressurePlant.FWT_valve.m_flow_nominal
  0 7.0087336244541476E+005       0                       0                
  6   256   # simpleBackPressurePlant.FWT_valve.K
  0 2.5636000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # simpleBackPressurePlant.FWT_valve.port_a.h_outflow
  0 2.7000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # simpleBackPressurePlant.FWT_valve.port_b.p
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.bypassValve.allowFlowReversal
  0       0                       0                       0                
  6  1281   # simpleBackPressurePlant.bypassValve.port_a_exposesState
  0       0                       0                       0                
  6  1281   # simpleBackPressurePlant.bypassValve.port_b_exposesState
  0       1                       0                       0                
  6  1281   # simpleBackPressurePlant.bypassValve.showDesignFlowDirection
  0 1.0132500000000000E+003 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.bypassValve.dp_start
  0       0                 -100000                  100000                
  6   256   # simpleBackPressurePlant.bypassValve.m_flow_start
  0 1.0000000000000000E-002 -100000                  100000                
  6   256   # simpleBackPressurePlant.bypassValve.m_flow_small
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.bypassValve.show_T
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.bypassValve.show_V_flow
  0 1.0132500000000000E+003       0                       0                
  6   288   # simpleBackPressurePlant.bypassValve.dp
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.bypassValve.V_flow
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.bypassValve.port_a_T
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.bypassValve.port_b_T
  0       0                       0                       2                
  6  1282   # simpleBackPressurePlant.bypassValve.state_a.phase
  0     150                       0                  100000                
  6  1280   # simpleBackPressurePlant.bypassValve.state_a.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6  1280   # simpleBackPressurePlant.bypassValve.state_a.T
  0       0                       0                       2                
  6  1282   # simpleBackPressurePlant.bypassValve.state_b.phase
  0     150                       0                  100000                
  6  1280   # simpleBackPressurePlant.bypassValve.state_b.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6  1280   # simpleBackPressurePlant.bypassValve.state_b.T
  0 5.9680000000000000E+006       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.bypassValve.dp_nominal
  0 1.3897000000000000E+001 -100000                  100000                
  6   256   # simpleBackPressurePlant.bypassValve.m_flow_nominal
  0 2.3285857908847187E-006       0                       0                
  6   256   # simpleBackPressurePlant.bypassValve.k
  0       0                 -100000                       0                
  6   388   # simpleBackPressurePlant.splitBypass.port_1.m_flow
  0 9.0229999999999979E+000 -9.9999999999999995E+059 9.9999999999999995E+059
  6   388   # simpleBackPressurePlant.splitBypass.port_3.m_flow
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.splitBypass.portFlowDirection_1
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.splitBypass.portFlowDirection_2
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.splitBypass.portFlowDirection_3
  0 1.0000000000000001E-001       0                       0                
  6   256   # simpleBackPressurePlant.splitBypass.fluidVolume
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.splitBypass.energyDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.splitBypass.massDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.splitBypass.substanceDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.splitBypass.traceDynamics
  0 6.0580000000000000E+006 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.splitBypass.p_start
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.splitBypass.use_T_start
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.splitBypass.T_start
  0 3.2291000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.splitBypass.h_start
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.splitBypass.X_start[1]
 -1 6.0580000000000000E+006       0                 1.0000000000000000E+100
  2   272   # simpleBackPressurePlant.splitBypass.medium.p
  0       0                       0                       0                
  3   256   # simpleBackPressurePlant.splitBypass.medium.der(p)
 -1 3.2291000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  2   304   # simpleBackPressurePlant.splitBypass.medium.h
  0       0                       0                       0                
  3   256   # simpleBackPressurePlant.splitBypass.medium.der(h)
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.splitBypass.medium.d
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.splitBypass.medium.der(d)
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.splitBypass.medium.T
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.splitBypass.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.splitBypass.medium.u
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.splitBypass.medium.der(u)
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6   256   # simpleBackPressurePlant.splitBypass.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # simpleBackPressurePlant.splitBypass.medium.MM
  0       1                       0                       2                
  6   322   # simpleBackPressurePlant.splitBypass.medium.state.phase
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.splitBypass.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.splitBypass.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.splitBypass.medium.T_degC
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.splitBypass.medium.p_bar
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.splitBypass.medium.sat.Tsat
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.splitBypass.U
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.splitBypass.der(U)
  0       0                       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.splitBypass.m
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.splitBypass.der(m)
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.splitBypass.Qb_flow
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.splitBypass.Wb_flow
  0       1                       0                       0                
  6  1281   # simpleBackPressurePlant.splitBypass.initialize_p
  0 1.0000000000000001E-001       0                       0                
  6   256   # simpleBackPressurePlant.splitBypass.V
  0       1                       0                       0                
  6   256   # simpleBackPressurePlant.generator.eta
  0 3.1415926535897933E+002       0                       0                
  6   256   # simpleBackPressurePlant.generator.omega
  0 3.1415926535897933E+002       0                       0                
  6   260   # simpleBackPressurePlant.generator.shaft.der(phi)
  0       0                       0                       0                
  6   388   # simpleBackPressurePlant.generator.shaft.tau
  0 1.0000000000000001E-001       0                       0                
  6   256   # simpleBackPressurePlant.LP.V_bleed
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.K1
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.K2
  0 3.2460000000000000E+000       0                       0                
  6   256   # simpleBackPressurePlant.LP.m_flow_nominal1
  0 1.3897000000000000E+001       0                       0                
  6   256   # simpleBackPressurePlant.LP.m_flow_nominal2
  0   97400                       0                 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.LP.p_a_nominal
  0   62200                       0                 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.LP.p_b_nominal
  0   45400                       0                 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.LP.p_c_nominal
  0 2.5363000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.LP.h_a_nominal
  0 2.5172000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.LP.h_c_nominal
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.LP.allowFlowReversal
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.LP.energyDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.LP.massDynamics
  0   97400                       0                 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.LP.p_a_start
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.LP.use_T_a_start
  0     300                       1                   10000                
  6   288   # simpleBackPressurePlant.LP.T_a_start
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.LP.h_a_start
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.W
  0       0                       0                       0                
  6   260   # simpleBackPressurePlant.LP.flange_a.phi
  0       0                       0                       0                
  6   388   # simpleBackPressurePlant.LP.flange_a.tau
  0       0                       0                       0                
  6   260   # simpleBackPressurePlant.LP.flange_b.phi
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # simpleBackPressurePlant.LP.port_c.h_outflow
  0       0                       0                       2                
  6   258   # simpleBackPressurePlant.LP.stage1.state_a.phase
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.LP.stage1.state_a.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.LP.stage1.state_a.T
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.stage1.W
  0 9.0000000000000002E-001       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.LP.stage1.eta_is
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.stage1.h_b_is
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.stage1.tau
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.LP.stage1.allowFlowReversal
 -1       0                       0                       0                
  2   276   # simpleBackPressurePlant.LP.stage1.flange_a.phi
  0       0                       0                       0                
  3   260   # simpleBackPressurePlant.LP.stage1.flange_a.der(phi)
  0       0                       0                       0                
  6   388   # simpleBackPressurePlant.LP.stage1.flange_a.tau
  0       0                       0                       0                
  6   260   # simpleBackPressurePlant.LP.stage1.flange_b.phi
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.stage1.K
  0 2.5363000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.LP.stage1.h_a_nominal
  0 3.2460000000000000E+000       0                       0                
  6   256   # simpleBackPressurePlant.LP.stage1.m_flow_nominal
  0   97400                 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.LP.stage1.p_a_nominal
  0   62200                 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.LP.stage1.p_b_nominal
  0       0                       0                       2                
  6   258   # simpleBackPressurePlant.LP.stage2.state_a.phase
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.LP.stage2.state_a.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.LP.stage2.state_a.T
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.stage2.W
  0 9.0000000000000002E-001       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.LP.stage2.eta_is
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.stage2.h_b_is
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.stage2.tau
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.LP.stage2.allowFlowReversal
  0       0                       0                       0                
  6   260   # simpleBackPressurePlant.LP.stage2.flange_a.phi
  0 3.1415926535897933E+002       0                       0                
  6   260   # simpleBackPressurePlant.LP.stage2.flange_a.der(phi)
  0       0                       0                       0                
  6   260   # simpleBackPressurePlant.LP.stage2.flange_b.phi
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.stage2.K
  0 2.5363000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.LP.stage2.h_a_nominal
  0 1.3897000000000000E+001       0                       0                
  6   256   # simpleBackPressurePlant.LP.stage2.m_flow_nominal
  0   97400                 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.LP.stage2.p_a_nominal
  0   45400                 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.LP.stage2.p_b_nominal
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.LP.splitter.portFlowDirection_1
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.LP.splitter.portFlowDirection_2
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.LP.splitter.portFlowDirection_3
  0 1.0000000000000001E-001       0                       0                
  6   256   # simpleBackPressurePlant.LP.splitter.fluidVolume
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.LP.splitter.energyDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.LP.splitter.massDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.LP.splitter.substanceDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.LP.splitter.traceDynamics
  0   97400                 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.LP.splitter.p_start
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.LP.splitter.use_T_start
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.LP.splitter.T_start
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.LP.splitter.h_start
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.LP.splitter.X_start[1]
 -1   97400                 6.1165700000000004E+002 1.0000000000000000E+008
  2   304   # simpleBackPressurePlant.LP.splitter.medium.p
  0       0                       0                       0                
  3   256   # simpleBackPressurePlant.LP.splitter.medium.der(p)
 -1       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  2   272   # simpleBackPressurePlant.LP.splitter.medium.h
  0       0                       0                       0                
  3   256   # simpleBackPressurePlant.LP.splitter.medium.der(h)
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.LP.splitter.medium.d
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.splitter.medium.der(d)
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.LP.splitter.medium.T
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.LP.splitter.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.LP.splitter.medium.u
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.splitter.medium.der(u)
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6   256   # simpleBackPressurePlant.LP.splitter.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # simpleBackPressurePlant.LP.splitter.medium.MM
  0       1                       0                       2                
  6   322   # simpleBackPressurePlant.LP.splitter.medium.state.phase
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.LP.splitter.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.LP.splitter.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.splitter.medium.T_degC
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.splitter.medium.p_bar
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.LP.splitter.medium.sat.Tsat
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.splitter.U
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.splitter.der(U)
  0       0                       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.LP.splitter.m
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.splitter.der(m)
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.splitter.Qb_flow
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.LP.splitter.Wb_flow
  0       1                       0                       0                
  6  1281   # simpleBackPressurePlant.LP.splitter.initialize_p
  0 1.0000000000000001E-001       0                       0                
  6   256   # simpleBackPressurePlant.LP.splitter.V
  0 1.0000000000000001E-001       0                       0                
  6   256   # simpleBackPressurePlant.HP.V_bleed
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.K1
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.K2
  0 9.0229999999999979E+000       0                       0                
  6   256   # simpleBackPressurePlant.HP.m_flow_nominal1
  0 8.4669999999999987E+000       0                       0                
  6   256   # simpleBackPressurePlant.HP.m_flow_nominal2
  0 6.0580000000000000E+006       0                 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.HP.p_a_nominal
  0 1.0100000000000000E+005       0                 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.HP.p_b_nominal
  0 5.9100000000000000E+005       0                 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.HP.p_c_nominal
  0 3.2291000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.HP.h_a_nominal
  0 2.8256000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.HP.h_c_nominal
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.HP.allowFlowReversal
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.HP.energyDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.HP.massDynamics
  0 5.9100000000000000E+005       0                 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.HP.p_c_start
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.HP.use_T_c_start
  0     300                       1                   10000                
  6   256   # simpleBackPressurePlant.HP.T_c_start
  0 2.8256000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.HP.h_c_start
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.W
  0 5.0000000000000000E+006 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # simpleBackPressurePlant.HP.port_a.p
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # simpleBackPressurePlant.HP.port_a.h_outflow
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # simpleBackPressurePlant.HP.port_b.h_outflow
  0       0                       0                       0                
  6   260   # simpleBackPressurePlant.HP.flange_a.phi
  0       0                       0                       0                
  6   388   # simpleBackPressurePlant.HP.flange_a.tau
  0       0                       0                       0                
  6   260   # simpleBackPressurePlant.HP.flange_b.phi
  0       0                       0                       2                
  6   258   # simpleBackPressurePlant.HP.stage1.state_a.phase
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.HP.stage1.state_a.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.HP.stage1.state_a.T
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.stage1.W
  0 9.0000000000000002E-001       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.HP.stage1.eta_is
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.stage1.h_b_is
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.stage1.tau
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.HP.stage1.allowFlowReversal
  0       0                       0                       0                
  6   260   # simpleBackPressurePlant.HP.stage1.flange_a.phi
  0 3.1415926535897933E+002       0                       0                
  6   260   # simpleBackPressurePlant.HP.stage1.flange_a.der(phi)
  0       0                       0                       0                
  6   388   # simpleBackPressurePlant.HP.stage1.flange_a.tau
  0       0                       0                       0                
  6   260   # simpleBackPressurePlant.HP.stage1.flange_b.phi
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.stage1.K
  0 3.2291000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.HP.stage1.h_a_nominal
  0 9.0229999999999979E+000       0                       0                
  6   256   # simpleBackPressurePlant.HP.stage1.m_flow_nominal
  0 6.0580000000000000E+006 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.HP.stage1.p_a_nominal
  0 5.9100000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.HP.stage1.p_b_nominal
  0       0                       0                       2                
  6   258   # simpleBackPressurePlant.HP.stage2.state_a.phase
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.HP.stage2.state_a.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.HP.stage2.state_a.T
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.stage2.W
  0 9.0000000000000002E-001       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.HP.stage2.eta_is
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.stage2.h_b_is
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.stage2.tau
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.HP.stage2.allowFlowReversal
  0       0                       0                       0                
  6   260   # simpleBackPressurePlant.HP.stage2.flange_a.phi
  0 3.1415926535897933E+002       0                       0                
  6   260   # simpleBackPressurePlant.HP.stage2.flange_a.der(phi)
  0       0                       0                       0                
  6   260   # simpleBackPressurePlant.HP.stage2.flange_b.phi
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.stage2.K
  0 2.8256000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.HP.stage2.h_a_nominal
  0 8.4669999999999987E+000       0                       0                
  6   256   # simpleBackPressurePlant.HP.stage2.m_flow_nominal
  0 5.9100000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.HP.stage2.p_a_nominal
  0 1.0100000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.HP.stage2.p_b_nominal
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.HP.splitter.portFlowDirection_1
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.HP.splitter.portFlowDirection_2
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.HP.splitter.portFlowDirection_3
  0 1.0000000000000001E-001       0                       0                
  6   256   # simpleBackPressurePlant.HP.splitter.fluidVolume
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.HP.splitter.energyDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.HP.splitter.massDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.HP.splitter.substanceDynamics
  0       3                       1                       4                
  6   258   # simpleBackPressurePlant.HP.splitter.traceDynamics
  0 5.9100000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.HP.splitter.p_start
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.HP.splitter.use_T_start
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.HP.splitter.T_start
  0 2.8256000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.HP.splitter.h_start
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.HP.splitter.X_start[1]
 -1 5.9100000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  2   304   # simpleBackPressurePlant.HP.splitter.medium.p
  0       0                       0                       0                
  3   256   # simpleBackPressurePlant.HP.splitter.medium.der(p)
 -1 2.8256000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  2   304   # simpleBackPressurePlant.HP.splitter.medium.h
  0       0                       0                       0                
  3   256   # simpleBackPressurePlant.HP.splitter.medium.der(h)
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.HP.splitter.medium.d
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.splitter.medium.der(d)
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.HP.splitter.medium.T
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.HP.splitter.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.HP.splitter.medium.u
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.splitter.medium.der(u)
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6   256   # simpleBackPressurePlant.HP.splitter.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # simpleBackPressurePlant.HP.splitter.medium.MM
  0       1                       0                       2                
  6   322   # simpleBackPressurePlant.HP.splitter.medium.state.phase
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.HP.splitter.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.HP.splitter.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.splitter.medium.T_degC
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.splitter.medium.p_bar
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.HP.splitter.medium.sat.Tsat
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.splitter.U
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.splitter.der(U)
  0       0                       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.HP.splitter.m
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.splitter.der(m)
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.splitter.Qb_flow
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.HP.splitter.Wb_flow
  0       1                       0                       0                
  6  1281   # simpleBackPressurePlant.HP.splitter.initialize_p
  0 1.0000000000000001E-001       0                       0                
  6   256   # simpleBackPressurePlant.HP.splitter.V
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.T_liveSteam.allowFlowReversal
  0 9.0229999999999979E+000       0                  100000                
  6   388   # simpleBackPressurePlant.T_liveSteam.port_a.m_flow
  0 -9.0229999999999979E+000 -100000                       0                
  6   388   # simpleBackPressurePlant.T_liveSteam.port_b.m_flow
  0 3.2291000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # simpleBackPressurePlant.T_liveSteam.port_b.h_outflow
  0       0                       0                       0                
  6  1281   # simpleBackPressurePlant.T_liveSteam.port_a_exposesState
  0       0                       0                       0                
  6  1281   # simpleBackPressurePlant.T_liveSteam.port_b_exposesState
  0       1                       0                       0                
  6  1281   # simpleBackPressurePlant.T_liveSteam.showDesignFlowDirection
  0       1                 -100000                  100000                
  6   256   # simpleBackPressurePlant.T_liveSteam.m_flow_nominal
  0 1.0000000000000000E-002       0                  100000                
  6   256   # simpleBackPressurePlant.T_liveSteam.m_flow_small
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.T_liveSteam.T
  0       1                       0                       0                
  6   258   # simpleBackPressurePlant.liveSteam.nPorts
  0 3.2291000000000000E+006       0                       0                
  6   256   # simpleBackPressurePlant.liveSteam.medium.h
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.liveSteam.medium.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.liveSteam.medium.T
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.liveSteam.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.liveSteam.medium.u
  0 4.6152363650654542E+002       0                 1.0000000000000000E+007
  6   256   # simpleBackPressurePlant.liveSteam.medium.R
  0 1.8015268000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # simpleBackPressurePlant.liveSteam.medium.MM
  0       1                       0                       2                
  6   322   # simpleBackPressurePlant.liveSteam.medium.state.phase
  0 3.2291000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.liveSteam.medium.state.h
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.liveSteam.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.liveSteam.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.liveSteam.medium.T_degC
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.liveSteam.medium.p_bar
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.liveSteam.medium.sat.Tsat
  0 -9.0229999999999979E+000 -9.9999999999999995E+059 9.9999999999999995E+059
  6   388   # simpleBackPressurePlant.liveSteam.ports[1].m_flow
  0 6.0580000000000000E+006 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # simpleBackPressurePlant.liveSteam.ports[1].p
  0 3.2291000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # simpleBackPressurePlant.liveSteam.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # simpleBackPressurePlant.liveSteam.flowDirection
  0       1                       0                       0                
  6   769   # simpleBackPressurePlant.liveSteam.use_m_flow_in
  0       0                       0                       0                
  6   769   # simpleBackPressurePlant.liveSteam.use_h_in
  0       0                       0                       0                
  6   769   # simpleBackPressurePlant.liveSteam.use_X_in
  0       0                       0                       0                
  6   769   # simpleBackPressurePlant.liveSteam.use_C_in
  0 9.0229999999999979E+000 -100000                  100000                
  6   256   # simpleBackPressurePlant.liveSteam.m_flow
  0 3.2291000000000000E+006 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.liveSteam.h
  0       1                       0                       1                
  6   256   # simpleBackPressurePlant.liveSteam.X[1]
  0 9.0229999999999979E+000       0                       0                
  6   256   # simpleBackPressurePlant.liveSteam.m_flow_in
  0 9.0229999999999979E+000       0                       0                
  6  1280   # simpleBackPressurePlant.liveSteam.m_flow_in_internal
  0 3.2291000000000000E+006       0                       0                
  6  1280   # simpleBackPressurePlant.liveSteam.h_in_internal
  0       1                       0                       0                
  6  1280   # simpleBackPressurePlant.liveSteam.X_in_internal[1]
  0 1.1967000000000000E+002 -100000                  100000                
  6   388   # simpleBackPressurePlant.dh_return.m_flow
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # simpleBackPressurePlant.dh_return.p
  0 -1.1967000000000000E+002 -100000                  100000                
  6   388   # simpleBackPressurePlant.dh_forward.m_flow
  0 6.0000000000000000E+005 6.1165700000000004E+002 1.0000000000000000E+008
  6   260   # simpleBackPressurePlant.dh_forward.p
  0 9.0229999999999979E+000       0                 9.9999999999999995E+059
  6   256   # simpleBackPressurePlant.u_load
  0       0                       0                       0                
  6   257   # simpleBackPressurePlant.turbineValve.allowFlowReversal
  0       0                       0                       0                
  6  1281   # simpleBackPressurePlant.turbineValve.port_a_exposesState
  0       0                       0                       0                
  6  1281   # simpleBackPressurePlant.turbineValve.port_b_exposesState
  0       1                       0                       0                
  6  1281   # simpleBackPressurePlant.turbineValve.showDesignFlowDirection
  0 1.0132500000000000E+003 6.1165700000000004E+002 1.0000000000000000E+008
  6   256   # simpleBackPressurePlant.turbineValve.dp_start
  0       0                 -100000                  100000                
  6   256   # simpleBackPressurePlant.turbineValve.m_flow_start
  0 1.0000000000000000E-002 -100000                  100000                
  6   256   # simpleBackPressurePlant.turbineValve.m_flow_small
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.turbineValve.show_T
  0       1                       0                       0                
  6   257   # simpleBackPressurePlant.turbineValve.show_V_flow
  0 1.0132500000000000E+003       0                       0                
  6   288   # simpleBackPressurePlant.turbineValve.dp
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.turbineValve.V_flow
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.turbineValve.port_a_T
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.turbineValve.port_b_T
  0       0                       0                       2                
  6  1282   # simpleBackPressurePlant.turbineValve.state_a.phase
  0     150                       0                  100000                
  6  1280   # simpleBackPressurePlant.turbineValve.state_a.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6  1280   # simpleBackPressurePlant.turbineValve.state_a.T
  0       0                       0                       2                
  6  1282   # simpleBackPressurePlant.turbineValve.state_b.phase
  0     150                       0                  100000                
  6  1280   # simpleBackPressurePlant.turbineValve.state_b.d
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6  1280   # simpleBackPressurePlant.turbineValve.state_b.T
  0   10000                       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.turbineValve.dp_nominal
  0 9.0229999999999997E+000 -100000                  100000                
  6   256   # simpleBackPressurePlant.turbineValve.m_flow_nominal
  0 9.0229999999999998E-004       0                       0                
  6   256   # simpleBackPressurePlant.turbineValve.k
  0       0                       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.turbineValve.opening_min
  0       0                       0                       0                
  6   321   # simpleBackPressurePlant.u_TAV
  0     500                 2.7314999999999998E+002 2.2731500000000001E+003
  6   256   # simpleBackPressurePlant.deaerator.sat.Tsat
  0      10                       0                       0                
  6   256   # simpleBackPressurePlant.deaerator.Vt
  0 1.9880000000000000E+006       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.deaerator.p_start
  0       5                       0                       0                
  6   256   # simpleBackPressurePlant.deaerator.Vl_start
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.deaerator.hv
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.deaerator.der(hv)
  0  100000                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   256   # simpleBackPressurePlant.deaerator.hl
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.deaerator.der(hl)
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.deaerator.rho_v
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.deaerator.der(rho_v)
  0     150                       0                  100000                
  6   256   # simpleBackPressurePlant.deaerator.rho_l
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.deaerator.der(rho_l)
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.deaerator.U
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.deaerator.der(U)
  0       0                       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.deaerator.m
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.deaerator.der(m)
  0       0                       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.deaerator.mv
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.deaerator.der(mv)
  0       0                       0                 1.0000000000000000E+100
  6   256   # simpleBackPressurePlant.deaerator.ml
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.deaerator.der(ml)
  0       0                       0                      10                
  6   256   # simpleBackPressurePlant.deaerator.Vv
 -1       5                       0                      10                
  2   280   # simpleBackPressurePlant.deaerator.Vl
  0       0                       0                       0                
  3   288   # simpleBackPressurePlant.deaerator.der(Vl)
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.deaerator.mc
  0 -1.6800000000000001E-001 -100000                  100000                
  6   388   # simpleBackPressurePlant.deaerator.condensate.m_flow
  0       0                       0                       0                
  6   256   # simpleBackPressurePlant.deaerator.VlVt_ratio
  0       0                       0                       0                
  6   256   # load.height
  0      60                       0                 1.0000000000000000E+100
  6   256   # load.duration
  0 9.0229999999999979E+000       0                       0                
  6   256   # load.offset
  0      20                       0                       0                
  6   256   # load.startTime
  0 9.0229999999999979E+000       0                       0                
  6   256   # load.y
  0      90                       0                       0                
  6   256   # closeTAV.startTime
  0       1                       0                       0                
  6   257   # closeTAV.startValue
  0       0                       0                       0                
  4   256   # CPUtime
  0       0                       0                       0                
  4   256   # EventCounter


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(807,116)
Default ambient pressure [Pa|bar]
Default ambient temperature [K|degC]
Constant gravity acceleration [m/s2]
= false to restrict to design flow direction (port_a -> port_b) [:#(type=Boolean)]
Default formulation of energy balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of mass balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of substance balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of trace substance balances [:#(type=Modelica.Fluid.Types.Dynamics)]
Default formulation of momentum balances, if options available [:#(type=Modelica.Fluid.Types.Dynamics)]
Default start value for mass flow rates [kg/s]
Default start value for pressures [Pa|bar]
Default start value for temperatures [K|degC]
= true to determine turbulent region automatically using Reynolds number [:#(type=Boolean)]
Default nominal mass flow rate [kg/s]
Regularization of zero flow for |m_flow| < eps_m_flow*m_flow_nominal [1]
Default small pressure drop for regularization of laminar and zero flow [Pa|bar]
Default small mass flow rate for regularization of laminar and zero flow [kg/s]
Number of ports [:#(type=Integer)]
Absolute pressure of medium [Pa|bar]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Pressure [Pa|bar]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation pressure [Pa|bar]
Saturation temperature [K|degC]
Molar mass [kg/mol]
Critical temperature [K|degC]
Critical pressure [Pa|bar]
Critical molar Volume [m3/mol]
Pitzer acentric factor
Triple point temperature [K|degC]
Triple point pressure [Pa|bar]
Melting point at 101325 Pa [K|degC]
Normal boiling point (at 101325 Pa) [K|degC]
Dipole moment of molecule in Debye (1 debye = 3.33564e10-30 C.m) [debye]
True if ideal gas heat capacity is available [:#(type=Boolean)]
True if critical data are known [:#(type=Boolean)]
True if a dipole moment known [:#(type=Boolean)]
True if a fundamental equation [:#(type=Boolean)]
True if liquid heat capacity is available [:#(type=Boolean)]
True if solid heat capacity is available [:#(type=Boolean)]
True if accurate data for a viscosity function is available [:#(type=Boolean)]
True if accurate data for thermal conductivity is available [:#(type=Boolean)]
True if vapour pressure data, e.g., Antoine coefficents are known [:#(type=Boolean)]
True if Pitzer accentric factor is known [:#(type=Boolean)]
Critical specific enthalpy of the fundamental equation [J/kg]
Critical specific entropy of the fundamental equation [J/(kg.K)]
Difference between specific enthalpy model (h_m) and f.eq. (h_f) (h_m - h_f) [J/kg]
Difference between specific enthalpy model (s_m) and f.eq. (s_f) (s_m - s_f) [J/(kg.K)]
Molar mass [kg/mol]
Critical temperature [K|degC]
Critical pressure [Pa|bar]
Critical molar Volume [m3/mol]
Pitzer acentric factor
Triple point temperature [K|degC]
Triple point pressure [Pa|bar]
Melting point at 101325 Pa [K|degC]
Normal boiling point (at 101325 Pa) [K|degC]
Dipole moment of molecule in Debye (1 debye = 3.33564e10-30 C.m) [debye]
True if ideal gas heat capacity is available [:#(type=Boolean)]
True if critical data are known [:#(type=Boolean)]
True if a dipole moment known [:#(type=Boolean)]
True if a fundamental equation [:#(type=Boolean)]
True if liquid heat capacity is available [:#(type=Boolean)]
True if solid heat capacity is available [:#(type=Boolean)]
True if accurate data for a viscosity function is available [:#(type=Boolean)]
True if accurate data for thermal conductivity is available [:#(type=Boolean)]
True if vapour pressure data, e.g., Antoine coefficents are known [:#(type=Boolean)]
True if Pitzer accentric factor is known [:#(type=Boolean)]
Critical specific enthalpy of the fundamental equation [J/kg]
Critical specific entropy of the fundamental equation [J/(kg.K)]
Difference between specific enthalpy model (h_m) and f.eq. (h_f) (h_m - h_f) [J/kg]
Difference between specific enthalpy model (s_m) and f.eq. (s_f) (s_m - s_f) [J/(kg.K)]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the mass flow rate from the input connector [:#(type=Boolean)]
Get the temperature from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed mass flow rate going out of the fluid port [kg/s]
Fixed value of temperature [K|degC]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector [kg/s]
Needed to connect to conditional connector [K]
Needed to connect to conditional connector [1]
Number of ports [:#(type=Integer)]
Absolute pressure of medium [Pa|bar]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Pressure [Pa|bar]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation pressure [Pa|bar]
Saturation temperature [K|degC]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the pressure from the input connector [:#(type=Boolean)]
Get the temperature from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Fixed value of temperature [K|degC]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector [Pa]
Needed to connect to conditional connector [K]
Needed to connect to conditional connector [1]
Height of ramps [degC]
Duration of ramp (= 0.0 gives a Step) [s]
Offset of output signal [degC]
Output = offset for time < startTime [s]
Connector of Real output signal [degC]
[K]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Nominal value of m_flow = port_a.m_flow [kg/s]
Regularization for bi-directional flow in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Temperature of the passing fluid [K|degC]
Height of ramps [1]
Duration of ramp (= 0.0 gives a Step) [s]
Offset of output signal [1]
Output = offset for time < startTime [s]
Connector of Real output signal [1]
District heat [W]
Electical power [W]
Absolute pressure of medium [Pa|bar]
Specific enthalpy of medium [J/kg]
der(Specific enthalpy of medium) [m2/s3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
der(Specific internal energy of medium) [m2/s3]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Pressure [Pa|bar]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation pressure [Pa|bar]
Saturation temperature [K|degC]
Nominal saturation temperature [K|degC]
Nominal saturation pressure [Pa|bar]
Nominal inlet pressure, port_c [Pa|bar]
Nominal steam flow [kg/s]
Flow coefficient [m-1.kg-1]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Energy dynamics, cold side [:#(type=Modelica.Fluid.Types.Dynamics)]
Volume of cold-side fluid [m3]
Start value of cold-side pressure [Pa|bar]
= true, use T_cold_start, otherwise h_cold_start [:#(type=Boolean)]
Start value of cold-side temperature [K|degC]
Start value of cold-side specific enthalpy [J/kg]
Start value of steam flow [kg/s]
Heat transferred to water [W]
Wet saturation enthalpy [J/kg]
Saturation pressure [Pa|bar]
Mass of cold-side fluid [kg]
der(Mass of cold-side fluid) [kg/s]
Nominal hot-side pressure drop [Pa|bar]
Internal energy cold side [J]
der(Internal energy cold side) [W]
hot-side pressure drop [Pa|bar]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Mass flow rate from the connection point into the component [kg/s]
Absolute pressure of medium [Pa|bar]
Specific enthalpy of medium [J/kg]
der(Specific enthalpy of medium) [m2/s3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
der(Specific internal energy of medium) [m2/s3]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Pressure [Pa|bar]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation pressure [Pa|bar]
Saturation temperature [K|degC]
Nominal saturation temperature [K|degC]
Nominal saturation pressure [Pa|bar]
Nominal inlet pressure, port_c [Pa|bar]
Nominal steam flow [kg/s]
Flow coefficient [m-1.kg-1]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Energy dynamics, cold side [:#(type=Modelica.Fluid.Types.Dynamics)]
Volume of cold-side fluid [m3]
Start value of cold-side pressure [Pa|bar]
= true, use T_cold_start, otherwise h_cold_start [:#(type=Boolean)]
Start value of cold-side temperature [K|degC]
Start value of cold-side specific enthalpy [J/kg]
Start value of steam flow [kg/s]
Heat transferred to water [W]
Wet saturation enthalpy [J/kg]
Saturation pressure [Pa|bar]
Mass of cold-side fluid [kg]
der(Mass of cold-side fluid) [kg/s]
Nominal hot-side pressure drop [Pa|bar]
Internal energy cold side [J]
der(Internal energy cold side) [W]
hot-side pressure drop [Pa|bar]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Mass flow rate from the connection point into the component [kg/s]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Nominal value of m_flow = port_a.m_flow [kg/s]
Regularization for bi-directional flow in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Temperature of the passing fluid [K|degC]
Number of ports [:#(type=Integer)]
Specific enthalpy of medium [J/kg]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Specific enthalpy [J/kg]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation temperature [K|degC]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the mass flow rate from the input connector [:#(type=Boolean)]
Get the specific enthalpy from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed mass flow rate going out of the fluid port [kg/s]
Fixed value of specific enthalpy [J/kg]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector [kg/s]
Needed to connect to conditional connector [J/kg]
Needed to connect to conditional connector [1]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Flow direction for port_1 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Flow direction for port_2 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Flow direction for port_3 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Volume [m3]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of trace substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
= true, use T_start, otherwise h_start [:#(type=Boolean)]
Start value of temperature [K|degC]
Start value of specific enthalpy [J/kg]
Start value of mass fractions m_i/m [kg/kg]
Absolute pressure of medium [Pa|bar]
der(Absolute pressure of medium) [Pa/s]
Specific enthalpy of medium [J/kg]
der(Specific enthalpy of medium) [m2/s3]
Density of medium [kg/m3|g/cm3]
der(Density of medium) [Pa.m-2.s]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
der(Specific internal energy of medium) [m2/s3]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation temperature [K|degC]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Heat flow across boundaries or energy source/sink [W]
Work flow across boundaries or source term [W]
= true to set up initial equations for pressure [:#(type=Boolean)]
Mixing volume inside junction [m3]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Flow direction for port_1 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Flow direction for port_2 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Flow direction for port_3 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Volume [m3]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of trace substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
= true, use T_start, otherwise h_start [:#(type=Boolean)]
Start value of temperature [K|degC]
Start value of specific enthalpy [J/kg]
Start value of mass fractions m_i/m [kg/kg]
Absolute pressure of medium [Pa|bar]
der(Absolute pressure of medium) [Pa/s]
Specific enthalpy of medium [J/kg]
der(Specific enthalpy of medium) [m2/s3]
Density of medium [kg/m3|g/cm3]
der(Density of medium) [Pa.m-2.s]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
der(Specific internal energy of medium) [m2/s3]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation temperature [K|degC]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Heat flow across boundaries or energy source/sink [W]
Work flow across boundaries or source term [W]
= true to set up initial equations for pressure [:#(type=Boolean)]
Mixing volume inside junction [m3]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
der(Absolute pressure of medium) [Pa/s]
Specific enthalpy of medium [J/kg]
der(Specific enthalpy of medium) [m2/s3]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
der(Specific internal energy of medium) [m2/s3]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation temperature [K|degC]
Volume [m3]
= true to use the HeatTransfer model [:#(type=Boolean)]
= true to use the UA exponent in expression 'UA = UA_nominal*(m_flow/m_flow_nominal)^UA_exponent' [:#(type=Boolean)]
Nominal thermal conductance [W/K]
Nominal mass flow rate [kg/s]
Exponent for expression 'UA = UA_nominal*(m_flow/m_flow_nominal)^UA_exponent'
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
= true, use T_start, otherwise h_start [:#(type=Boolean)]
Start value of temperature [K|degC]
Start value of specific enthalpy [J/kg]
Start value of mass fractions m_i/m [kg/kg]
= true to activate homotopy(actual,simple) during steady-state initialization [:#(type=Boolean)]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Bulk temperature [K|degC]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
[W/K]
Heat flow rate (positive if flowing from outside into the component) [W]
= true to set up initial equations for pressure [:#(type=Boolean)]
[J/kg]
Number of ports [:#(type=Integer)]
Absolute pressure of medium [Pa|bar]
Specific enthalpy of medium [J/kg]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Specific enthalpy [J/kg]
Pressure [Pa|bar]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation pressure [Pa|bar]
Saturation temperature [K|degC]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the pressure from the input connector [:#(type=Boolean)]
Get the specific enthalpy from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Fixed value of specific enthalpy [J/kg]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector [Pa]
Needed to connect to conditional connector [J/kg]
Needed to connect to conditional connector [1]
Nominal pressure at port_a [Pa|bar]
Nominal pressure at port_b [Pa|bar]
Nominal mass flow rate [kg/s]
linear pressuredrop coefficient [m-1.s-1]
Nominal pressure at port_a [Pa|bar]
Nominal pressure at port_b [Pa|bar]
Nominal mass flow rate [kg/s]
linear pressuredrop coefficient [m-1.s-1]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Thermodynamic pressure in the connection point [Pa|bar]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Guess value of dp = port_a.p - port_b.p [Pa|bar]
Guess value of m_flow = port_a.m_flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if temperatures at port_a and port_b are computed [:#(type=Boolean)]
= true, if volume flow rate at inflowing port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b (= port_a.p - port_b.p) [Pa|bar]
Volume flow rate at inflowing port (positive when flow from port_a to port_b) [m3/s]
Temperature close to port_a, if show_T = true [K|degC]
Temperature close to port_b, if show_T = true [K|degC]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Density [kg/m3|g/cm3]
Temperature [K|degC]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Density [kg/m3|g/cm3]
Temperature [K|degC]
Nominal pressure drop at full opening [Pa|bar]
Nominal mass flowrate at full opening [kg/s]
Hydraulic conductance at full opening [kg/(s.Pa)]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Flow direction for port_1 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Flow direction for port_2 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Flow direction for port_3 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Volume [m3]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of trace substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
= true, use T_start, otherwise h_start [:#(type=Boolean)]
Start value of temperature [K|degC]
Start value of specific enthalpy [J/kg]
Start value of mass fractions m_i/m [kg/kg]
Absolute pressure of medium [Pa|bar]
der(Absolute pressure of medium) [Pa/s]
Specific enthalpy of medium [J/kg]
der(Specific enthalpy of medium) [m2/s3]
Density of medium [kg/m3|g/cm3]
der(Density of medium) [Pa.m-2.s]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
der(Specific internal energy of medium) [m2/s3]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation temperature [K|degC]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Heat flow across boundaries or energy source/sink [W]
Work flow across boundaries or source term [W]
= true to set up initial equations for pressure [:#(type=Boolean)]
Mixing volume inside junction [m3]
Conversion efficiency [1]
Fixed speed [rad/s]
der(Absolute rotation angle of flange) [rad/s]
Cut torque in the flange [N.m]
Mixing volume inside bleed splitter [m3]
Elipse Constant for stage1 [m2]
Elipse Constant for stage2 [m2]
Nominal steam flow rate for stage1 [kg/s]
Nominal steam flow rate for stage2 [kg/s]
Nominal inlet pressure [Pa|bar]
Nominal outlet pressure [Pa|bar]
Nominal bleed pressure [Pa|bar]
Nominal inlet enthalpy [J/kg]
Nominal bleed enthalpy [J/kg]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of bleed pressure [Pa|bar]
= true, use T_start, otherwise h_start [:#(type=Boolean)]
Start value of bleed temperature [K|degC]
Start value of specific enthalpy [J/kg]
Mechanical power [W]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Density [kg/m3|g/cm3]
Temperature [K|degC]
Mechanical power [W]
Isentropic efficiency [1]
[J/kg]
Net torque from turbine [N.m]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Absolute rotation angle of flange [rad|deg]
der(Absolute rotation angle of flange) [rad/s]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Elipse Constant [m2]
Nominal inlet enthalpy [J/kg]
Nominal steam flow rate [kg/s]
Nominal inlet pressure [Pa|bar]
Nominal outlet pressure [Pa|bar]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Density [kg/m3|g/cm3]
Temperature [K|degC]
Mechanical power [W]
Isentropic efficiency [1]
[J/kg]
Net torque from turbine [N.m]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Absolute rotation angle of flange [rad|deg]
der(Absolute rotation angle of flange) [rad/s]
Absolute rotation angle of flange [rad|deg]
Elipse Constant [m2]
Nominal inlet enthalpy [J/kg]
Nominal steam flow rate [kg/s]
Nominal inlet pressure [Pa|bar]
Nominal outlet pressure [Pa|bar]
Flow direction for port_1 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Flow direction for port_2 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Flow direction for port_3 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Volume [m3]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of trace substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
= true, use T_start, otherwise h_start [:#(type=Boolean)]
Start value of temperature [K|degC]
Start value of specific enthalpy [J/kg]
Start value of mass fractions m_i/m [kg/kg]
Absolute pressure of medium [Pa|bar]
der(Absolute pressure of medium) [Pa/s]
Specific enthalpy of medium [J/kg]
der(Specific enthalpy of medium) [m2/s3]
Density of medium [kg/m3|g/cm3]
der(Density of medium) [Pa.m-2.s]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
der(Specific internal energy of medium) [m2/s3]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation temperature [K|degC]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Heat flow across boundaries or energy source/sink [W]
Work flow across boundaries or source term [W]
= true to set up initial equations for pressure [:#(type=Boolean)]
Mixing volume inside junction [m3]
Mixing volume inside bleed splitter [m3]
Elipse Constant for stage1 [m2]
Elipse Constant for stage2 [m2]
Nominal steam flow rate for stage1 [kg/s]
Nominal steam flow rate for stage2 [kg/s]
Nominal inlet pressure [Pa|bar]
Nominal outlet pressure [Pa|bar]
Nominal bleed pressure [Pa|bar]
Nominal inlet enthalpy [J/kg]
Nominal bleed enthalpy [J/kg]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of bleed pressure [Pa|bar]
= true, use T_start, otherwise h_start [:#(type=Boolean)]
Start value of bleed temperature [K|degC]
Start value of specific enthalpy [J/kg]
Mechanical power [W]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Density [kg/m3|g/cm3]
Temperature [K|degC]
Mechanical power [W]
Isentropic efficiency [1]
[J/kg]
Net torque from turbine [N.m]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Absolute rotation angle of flange [rad|deg]
der(Absolute rotation angle of flange) [rad/s]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Elipse Constant [m2]
Nominal inlet enthalpy [J/kg]
Nominal steam flow rate [kg/s]
Nominal inlet pressure [Pa|bar]
Nominal outlet pressure [Pa|bar]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Density [kg/m3|g/cm3]
Temperature [K|degC]
Mechanical power [W]
Isentropic efficiency [1]
[J/kg]
Net torque from turbine [N.m]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Absolute rotation angle of flange [rad|deg]
der(Absolute rotation angle of flange) [rad/s]
Absolute rotation angle of flange [rad|deg]
Elipse Constant [m2]
Nominal inlet enthalpy [J/kg]
Nominal steam flow rate [kg/s]
Nominal inlet pressure [Pa|bar]
Nominal outlet pressure [Pa|bar]
Flow direction for port_1 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Flow direction for port_2 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Flow direction for port_3 [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Volume [m3]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of trace substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
= true, use T_start, otherwise h_start [:#(type=Boolean)]
Start value of temperature [K|degC]
Start value of specific enthalpy [J/kg]
Start value of mass fractions m_i/m [kg/kg]
Absolute pressure of medium [Pa|bar]
der(Absolute pressure of medium) [Pa/s]
Specific enthalpy of medium [J/kg]
der(Specific enthalpy of medium) [m2/s3]
Density of medium [kg/m3|g/cm3]
der(Density of medium) [Pa.m-2.s]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
der(Specific internal energy of medium) [m2/s3]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation temperature [K|degC]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Heat flow across boundaries or energy source/sink [W]
Work flow across boundaries or source term [W]
= true to set up initial equations for pressure [:#(type=Boolean)]
Mixing volume inside junction [m3]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Nominal value of m_flow = port_a.m_flow [kg/s]
Regularization for bi-directional flow in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Temperature of the passing fluid [K|degC]
Number of ports [:#(type=Integer)]
Specific enthalpy of medium [J/kg]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Specific enthalpy [J/kg]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Saturation temperature [K|degC]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the mass flow rate from the input connector [:#(type=Boolean)]
Get the specific enthalpy from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed mass flow rate going out of the fluid port [kg/s]
Fixed value of specific enthalpy [J/kg]
Fixed value of composition [kg/kg]
Prescribed mass flow rate [kg/s]
Needed to connect to conditional connector [kg/s]
Needed to connect to conditional connector [J/kg]
Needed to connect to conditional connector [1]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
[kg/s]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
= true if port_a exposes the state of a fluid volume [:#(type=Boolean)]
= true if port_b.p exposes the state of a fluid volume [:#(type=Boolean)]
= false to hide the arrow in the model icon [:#(type=Boolean)]
Guess value of dp = port_a.p - port_b.p [Pa|bar]
Guess value of m_flow = port_a.m_flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if temperatures at port_a and port_b are computed [:#(type=Boolean)]
= true, if volume flow rate at inflowing port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b (= port_a.p - port_b.p) [Pa|bar]
Volume flow rate at inflowing port (positive when flow from port_a to port_b) [m3/s]
Temperature close to port_a, if show_T = true [K|degC]
Temperature close to port_b, if show_T = true [K|degC]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Density [kg/m3|g/cm3]
Temperature [K|degC]
Phase of the fluid: 1 for 1-phase, 2 for two-phase, 0 for not known, e.g., interactive use [:#(type=Integer)]
Density [kg/m3|g/cm3]
Temperature [K|degC]
Nominal pressure drop at full opening=1 [Pa|bar]
Nominal mass flowrate at full opening=1 [kg/s]
Hydraulic conductance at full opening=1 [kg/(s.Pa)]
Remaining opening if closed, causing small leakage flow [1]
[:#(type=Boolean)]
Saturation temperature [K|degC]
Total fluid volume [m3]
Nominal pressure [Pa|bar]
Nominal liquid volume [m3]
Specific enthalpy of vapour (x=1) [J/kg]
der(Specific enthalpy of vapour (x=1)) [m2/s3]
Specific enthalpy of liquid (x=0) [J/kg]
der(Specific enthalpy of liquid (x=0)) [m2/s3]
vapour density [kg/m3|g/cm3]
der(vapour density) [Pa.m-2.s]
liquid density [kg/m3|g/cm3]
der(liquid density) [Pa.m-2.s]
Internal energy of liquid [J]
der(Internal energy of liquid) [W]
Total fluid mass [kg]
der(Total fluid mass) [kg/s]
vapour mass [kg]
der(vapour mass) [kg/s]
liquid mass [kg]
der(liquid mass) [kg/s]
vapour volume [m3]
liquid volume [m3]
der(liquid volume) [m3/s]
condensation mass flow rate [kg/s]
Mass flow rate from the connection point into the component [kg/s]
[1]
Height of ramps [kg/s]
Duration of ramp (= 0.0 gives a Step) [s]
Offset of output signal [kg/s]
Output = offset for time < startTime [s]
Connector of Real output signal [kg/s]
Time instant of step start [s]
Output before startTime [:#(type=Boolean)]



